{
  "x-generator": "NSwag v13.16.1.0 (NJsonSchema v10.7.2.0 (Newtonsoft.Json v13.0.0.0))",
  "openapi": "3.0.0",
  "info": {
    "title": "My Title",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://localhost:5001"
    }
  ],
  "paths": {
    "/api/AddSpotCommand": {
      "post": {
        "tags": [
          "AddSpot"
        ],
        "operationId": "AddSpot_Command",
        "requestBody": {
          "x-name": "AddSpotCommand",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddSpotCommand"
              }
            }
          },
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unit"
                }
              }
            }
          }
        }
      }
    },
    "/api/RemoveSpotCommand": {
      "post": {
        "tags": [
          "RemoveSpot"
        ],
        "operationId": "RemoveSpot_Command",
        "requestBody": {
          "x-name": "RemoveSpotCommand",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RemoveSpotCommand"
              }
            }
          },
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unit"
                }
              }
            }
          }
        }
      }
    },
    "/api/SpotsOfRegistrationQuery": {
      "post": {
        "tags": [
          "SpotsOfRegistration"
        ],
        "operationId": "SpotsOfRegistration_Query",
        "requestBody": {
          "x-name": "SpotsOfRegistrationQuery",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SpotsOfRegistrationQuery"
              }
            }
          },
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SpotDisplayItem"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/RegistrationQuery": {
      "post": {
        "tags": [
          "Registration"
        ],
        "operationId": "Registration_Query",
        "requestBody": {
          "x-name": "RegistrationQuery",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegistrationQuery"
              }
            }
          },
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegistrationDisplayItem"
                }
              }
            }
          }
        }
      }
    },
    "/api/SwapFirstLastNameCommand": {
      "post": {
        "tags": [
          "SwapFirstLastName"
        ],
        "operationId": "SwapFirstLastName_Command",
        "requestBody": {
          "x-name": "SwapFirstLastNameCommand",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SwapFirstLastNameCommand"
              }
            }
          },
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unit"
                }
              }
            }
          }
        }
      }
    },
    "/api/SearchRegistrationQuery": {
      "post": {
        "tags": [
          "SearchRegistration"
        ],
        "operationId": "SearchRegistration_Query",
        "requestBody": {
          "x-name": "SearchRegistrationQuery",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SearchRegistrationQuery"
              }
            }
          },
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RegistrationMatch"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/ProcessRawRegistrationCommand": {
      "post": {
        "tags": [
          "ProcessRawRegistration"
        ],
        "operationId": "ProcessRawRegistration_Command",
        "requestBody": {
          "x-name": "ProcessRawRegistrationCommand",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProcessRawRegistrationCommand"
              }
            }
          },
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unit"
                }
              }
            }
          }
        }
      }
    },
    "/api/SetReductionCommand": {
      "post": {
        "tags": [
          "SetReduction"
        ],
        "operationId": "SetReduction_Command",
        "requestBody": {
          "x-name": "SetReductionCommand",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SetReductionCommand"
              }
            }
          },
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unit"
                }
              }
            }
          }
        }
      }
    },
    "/api/AllExternalRegistrationIdentifiersQuery": {
      "post": {
        "tags": [
          "AllExternalRegistrationIdentifiers"
        ],
        "operationId": "AllExternalRegistrationIdentifiers_Query",
        "requestBody": {
          "x-name": "AllExternalRegistrationIdentifiersQuery",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AllExternalRegistrationIdentifiersQuery"
              }
            }
          },
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/RecalculatePriceCommand": {
      "post": {
        "tags": [
          "RecalculatePrice"
        ],
        "operationId": "RecalculatePrice_Command",
        "requestBody": {
          "x-name": "RecalculatePriceCommand",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RecalculatePriceCommand"
              }
            }
          },
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unit"
                }
              }
            }
          }
        }
      }
    },
    "/api/CheckinQuery": {
      "post": {
        "tags": [
          "Checkin"
        ],
        "operationId": "Checkin_Query",
        "requestBody": {
          "x-name": "CheckinQuery",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CheckinQuery"
              }
            }
          },
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CheckinView"
                }
              }
            }
          }
        }
      }
    },
    "/api/PartyOverviewQuery": {
      "post": {
        "tags": [
          "PartyOverview"
        ],
        "operationId": "PartyOverview_Query",
        "requestBody": {
          "x-name": "PartyOverviewQuery",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PartyOverviewQuery"
              }
            }
          },
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PartyItem"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/ChangeUnmatchedPartnerRegistrationToSingleRegistrationCommand": {
      "post": {
        "tags": [
          "ChangeUnmatchedPartnerRegistrationToSingleRegistration"
        ],
        "operationId": "ChangeUnmatchedPartnerRegistrationToSingleRegistration_Command",
        "requestBody": {
          "x-name": "ChangeUnmatchedPartnerRegistrationToSingleRegistrationCommand",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangeUnmatchedPartnerRegistrationToSingleRegistrationCommand"
              }
            }
          },
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unit"
                }
              }
            }
          }
        }
      }
    },
    "/api/MatchPartnerRegistrationsCommand": {
      "post": {
        "tags": [
          "MatchPartnerRegistrations"
        ],
        "operationId": "MatchPartnerRegistrations_Command",
        "requestBody": {
          "x-name": "MatchPartnerRegistrationsCommand",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MatchPartnerRegistrationsCommand"
              }
            }
          },
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unit"
                }
              }
            }
          }
        }
      }
    },
    "/api/PotentialPartnersQuery": {
      "post": {
        "tags": [
          "PotentialPartners"
        ],
        "operationId": "PotentialPartners_Query",
        "requestBody": {
          "x-name": "PotentialPartnersQuery",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PotentialPartnersQuery"
              }
            }
          },
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PotentialPartnerMatch"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/RegistrationsWithUnmatchedPartnerQuery": {
      "post": {
        "tags": [
          "RegistrationsWithUnmatchedPartner"
        ],
        "operationId": "RegistrationsWithUnmatchedPartner_Query",
        "requestBody": {
          "x-name": "RegistrationsWithUnmatchedPartnerQuery",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegistrationsWithUnmatchedPartnerQuery"
              }
            }
          },
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PotentialPartnerMatch"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/UnbindPartnerRegistrationCommand": {
      "post": {
        "tags": [
          "UnbindPartnerRegistration"
        ],
        "operationId": "UnbindPartnerRegistration_Command",
        "requestBody": {
          "x-name": "UnbindPartnerRegistrationCommand",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UnbindPartnerRegistrationCommand"
              }
            }
          },
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unit"
                }
              }
            }
          }
        }
      }
    },
    "/api/AddIndividualReductionCommand": {
      "post": {
        "tags": [
          "AddIndividualReduction"
        ],
        "operationId": "AddIndividualReduction_Command",
        "requestBody": {
          "x-name": "AddIndividualReductionCommand",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddIndividualReductionCommand"
              }
            }
          },
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unit"
                }
              }
            }
          }
        }
      }
    },
    "/api/CheckRegistrationAfterPaymentCommand": {
      "post": {
        "tags": [
          "CheckRegistrationAfterPayment"
        ],
        "operationId": "CheckRegistrationAfterPayment_Command",
        "requestBody": {
          "x-name": "CheckRegistrationAfterPaymentCommand",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CheckRegistrationAfterPaymentCommand"
              }
            }
          },
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unit"
                }
              }
            }
          }
        }
      }
    },
    "/api/CancelRegistrationCommand": {
      "post": {
        "tags": [
          "CancelRegistration"
        ],
        "operationId": "CancelRegistration_Command",
        "requestBody": {
          "x-name": "CancelRegistrationCommand",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CancelRegistrationCommand"
              }
            }
          },
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unit"
                }
              }
            }
          }
        }
      }
    },
    "/api/RegistrationFormTypesQuery": {
      "post": {
        "tags": [
          "RegistrationFormTypes"
        ],
        "operationId": "RegistrationFormTypes_Query",
        "requestBody": {
          "x-name": "RegistrationFormTypesQuery",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegistrationFormTypesQuery"
              }
            }
          },
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RegistrationFormType"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/AvailableQuestionMappingsQuery": {
      "post": {
        "tags": [
          "AvailableQuestionMappings"
        ],
        "operationId": "AvailableQuestionMappings_Query",
        "requestBody": {
          "x-name": "AvailableQuestionMappingsQuery",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AvailableQuestionMappingsQuery"
              }
            }
          },
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AvailableQuestionMapping"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/AvailableQuestionOptionMappingsQuery": {
      "post": {
        "tags": [
          "AvailableQuestionOptionMappings"
        ],
        "operationId": "AvailableQuestionOptionMappings_Query",
        "requestBody": {
          "x-name": "AvailableQuestionOptionMappingsQuery",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AvailableQuestionOptionMappingsQuery"
              }
            }
          },
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AvailableQuestionOptionMapping"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/SaveRegistrationFormMappingsCommand": {
      "post": {
        "tags": [
          "SaveRegistrationFormMappings"
        ],
        "operationId": "SaveRegistrationFormMappings_Command",
        "requestBody": {
          "x-name": "SaveRegistrationFormMappingsCommand",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveRegistrationFormMappingsCommand"
              }
            }
          },
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unit"
                }
              }
            }
          }
        }
      }
    },
    "/api/DeleteRegistrationFormCommand": {
      "post": {
        "tags": [
          "DeleteRegistrationForm"
        ],
        "operationId": "DeleteRegistrationForm_Command",
        "requestBody": {
          "x-name": "DeleteRegistrationFormCommand",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteRegistrationFormCommand"
              }
            }
          },
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unit"
                }
              }
            }
          }
        }
      }
    },
    "/api/PendingRegistrationFormQuery": {
      "post": {
        "tags": [
          "PendingRegistrationForm"
        ],
        "operationId": "PendingRegistrationForm_Query",
        "requestBody": {
          "x-name": "PendingRegistrationFormQuery",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PendingRegistrationFormQuery"
              }
            }
          },
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RegistrationFormItem"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/SaveRegistrationFormDefinitionCommand": {
      "post": {
        "tags": [
          "SaveRegistrationFormDefinition"
        ],
        "operationId": "SaveRegistrationFormDefinition_Command",
        "requestBody": {
          "x-name": "SaveRegistrationFormDefinitionCommand",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveRegistrationFormDefinitionCommand"
              }
            }
          },
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unit"
                }
              }
            }
          }
        }
      }
    },
    "/api/FormPathsQuery": {
      "post": {
        "tags": [
          "FormPaths"
        ],
        "operationId": "FormPaths_Query",
        "requestBody": {
          "x-name": "FormPathsQuery",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FormPathsQuery"
              }
            }
          },
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RegistrationFormGroup"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/CreateRegistrableCommand": {
      "post": {
        "tags": [
          "CreateRegistrable"
        ],
        "operationId": "CreateRegistrable_Command",
        "requestBody": {
          "x-name": "CreateRegistrableCommand",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateRegistrableCommand"
              }
            }
          },
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unit"
                }
              }
            }
          }
        }
      }
    },
    "/api/DeleteRegistrableCommand": {
      "post": {
        "tags": [
          "DeleteRegistrable"
        ],
        "operationId": "DeleteRegistrable_Command",
        "requestBody": {
          "x-name": "DeleteRegistrableCommand",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteRegistrableCommand"
              }
            }
          },
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unit"
                }
              }
            }
          }
        }
      }
    },
    "/api/RegistrablesOverviewQuery": {
      "post": {
        "tags": [
          "RegistrablesOverview"
        ],
        "operationId": "RegistrablesOverview_Query",
        "requestBody": {
          "x-name": "RegistrablesOverviewQuery",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegistrablesOverviewQuery"
              }
            }
          },
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegistrablesOverview"
                }
              }
            }
          }
        }
      }
    },
    "/api/RegistrablesQuery": {
      "post": {
        "tags": [
          "Registrables"
        ],
        "operationId": "Registrables_Query",
        "requestBody": {
          "x-name": "RegistrablesQuery",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegistrablesQuery"
              }
            }
          },
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RegistrableDisplayItem"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/SetDoubleRegistrableLimitsCommand": {
      "post": {
        "tags": [
          "SetDoubleRegistrableLimits"
        ],
        "operationId": "SetDoubleRegistrableLimits_Command",
        "requestBody": {
          "x-name": "SetDoubleRegistrableLimitsCommand",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SetDoubleRegistrableLimitsCommand"
              }
            }
          },
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unit"
                }
              }
            }
          }
        }
      }
    },
    "/api/SetSingleRegistrableLimitsCommand": {
      "post": {
        "tags": [
          "SetSingleRegistrableLimits"
        ],
        "operationId": "SetSingleRegistrableLimits_Command",
        "requestBody": {
          "x-name": "SetSingleRegistrableLimitsCommand",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SetSingleRegistrableLimitsCommand"
              }
            }
          },
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unit"
                }
              }
            }
          }
        }
      }
    },
    "/api/CheckIfRegistrationIsPromotedCommand": {
      "post": {
        "tags": [
          "CheckIfRegistrationIsPromoted"
        ],
        "operationId": "CheckIfRegistrationIsPromoted_Command",
        "requestBody": {
          "x-name": "CheckIfRegistrationIsPromotedCommand",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CheckIfRegistrationIsPromotedCommand"
              }
            }
          },
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unit"
                }
              }
            }
          }
        }
      }
    },
    "/api/TryPromoteFromWaitingListCommand": {
      "post": {
        "tags": [
          "TryPromoteFromWaitingList"
        ],
        "operationId": "TryPromoteFromWaitingList_Command",
        "requestBody": {
          "x-name": "TryPromoteFromWaitingListCommand",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TryPromoteFromWaitingListCommand"
              }
            }
          },
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unit"
                }
              }
            }
          }
        }
      }
    },
    "/api/RegistrationsOnWaitingListQuery": {
      "post": {
        "tags": [
          "RegistrationsOnWaitingList"
        ],
        "operationId": "RegistrationsOnWaitingList_Query",
        "requestBody": {
          "x-name": "RegistrationsOnWaitingListQuery",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegistrationsOnWaitingListQuery"
              }
            }
          },
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WaitingListSpot"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/SetFallbackToPartyPassCommand": {
      "post": {
        "tags": [
          "SetFallbackToPartyPass"
        ],
        "operationId": "SetFallbackToPartyPass_Command",
        "requestBody": {
          "x-name": "SetFallbackToPartyPassCommand",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SetFallbackToPartyPassCommand"
              }
            }
          },
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unit"
                }
              }
            }
          }
        }
      }
    },
    "/api/ActivateAutomaticPromotionCommand": {
      "post": {
        "tags": [
          "ActivateAutomaticPromotion"
        ],
        "operationId": "ActivateAutomaticPromotion_Command",
        "requestBody": {
          "x-name": "ActivateAutomaticPromotionCommand",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ActivateAutomaticPromotionCommand"
              }
            }
          },
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unit"
                }
              }
            }
          }
        }
      }
    },
    "/api/DeactivateAutomaticPromotionCommand": {
      "post": {
        "tags": [
          "DeactivateAutomaticPromotion"
        ],
        "operationId": "DeactivateAutomaticPromotion_Command",
        "requestBody": {
          "x-name": "DeactivateAutomaticPromotionCommand",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeactivateAutomaticPromotionCommand"
              }
            }
          },
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unit"
                }
              }
            }
          }
        }
      }
    },
    "/api/RegistrableTagsQuery": {
      "post": {
        "tags": [
          "RegistrableTags"
        ],
        "operationId": "RegistrableTags_Query",
        "requestBody": {
          "x-name": "RegistrableTagsQuery",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegistrableTagsQuery"
              }
            }
          },
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RegistrableTagDisplayItem"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/DeleteReductionCommand": {
      "post": {
        "tags": [
          "DeleteReduction"
        ],
        "operationId": "DeleteReduction_Command",
        "requestBody": {
          "x-name": "DeleteReductionCommand",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteReductionCommand"
              }
            }
          },
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unit"
                }
              }
            }
          }
        }
      }
    },
    "/api/SaveReductionCommand": {
      "post": {
        "tags": [
          "SaveReduction"
        ],
        "operationId": "SaveReduction_Command",
        "requestBody": {
          "x-name": "SaveReductionCommand",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveReductionCommand"
              }
            }
          },
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unit"
                }
              }
            }
          }
        }
      }
    },
    "/api/PricingQuery": {
      "post": {
        "tags": [
          "Pricing"
        ],
        "operationId": "Pricing_Query",
        "requestBody": {
          "x-name": "PricingQuery",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PricingQuery"
              }
            }
          },
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RegistrablePricing"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/SetRegistrablesPricesCommand": {
      "post": {
        "tags": [
          "SetRegistrablesPrices"
        ],
        "operationId": "SetRegistrablesPrices_Command",
        "requestBody": {
          "x-name": "SetRegistrablesPricesCommand",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SetRegistrablesPricesCommand"
              }
            }
          },
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unit"
                }
              }
            }
          }
        }
      }
    },
    "/api/ParticipantsOfRegistrableQuery": {
      "post": {
        "tags": [
          "ParticipantsOfRegistrable"
        ],
        "operationId": "ParticipantsOfRegistrable_Query",
        "requestBody": {
          "x-name": "ParticipantsOfRegistrableQuery",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ParticipantsOfRegistrableQuery"
              }
            }
          },
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegistrableDisplayInfo"
                }
              }
            }
          }
        }
      }
    },
    "/api/ProcessReceivedSmsCommand": {
      "post": {
        "tags": [
          "ProcessReceivedSms"
        ],
        "operationId": "ProcessReceivedSms_Command",
        "requestBody": {
          "x-name": "ProcessReceivedSmsCommand",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProcessReceivedSmsCommand"
              }
            }
          },
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unit"
                }
              }
            }
          }
        }
      }
    },
    "/api/SendSmsCommand": {
      "post": {
        "tags": [
          "SendSms"
        ],
        "operationId": "SendSms_Command",
        "requestBody": {
          "x-name": "SendSmsCommand",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SendSmsCommand"
              }
            }
          },
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unit"
                }
              }
            }
          }
        }
      }
    },
    "/api/SmsConversationQuery": {
      "post": {
        "tags": [
          "SmsConversation"
        ],
        "operationId": "SmsConversation_Query",
        "requestBody": {
          "x-name": "SmsConversationQuery",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SmsConversationQuery"
              }
            }
          },
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SmsDisplayItem"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/IgnorePaymentCommand": {
      "post": {
        "tags": [
          "IgnorePayment"
        ],
        "operationId": "IgnorePayment_Command",
        "requestBody": {
          "x-name": "IgnorePaymentCommand",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IgnorePaymentCommand"
              }
            }
          },
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unit"
                }
              }
            }
          }
        }
      }
    },
    "/api/PaymentOverviewQuery": {
      "post": {
        "tags": [
          "PaymentOverview"
        ],
        "operationId": "PaymentOverview_Query",
        "requestBody": {
          "x-name": "PaymentOverviewQuery",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentOverviewQuery"
              }
            }
          },
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentOverview"
                }
              }
            }
          }
        }
      }
    },
    "/api/UnassignedIncomingPaymentsQuery": {
      "post": {
        "tags": [
          "UnassignedIncomingPayments"
        ],
        "operationId": "UnassignedIncomingPayments_Query",
        "requestBody": {
          "x-name": "UnassignedIncomingPaymentsQuery",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UnassignedIncomingPaymentsQuery"
              }
            }
          },
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PaymentDisplayItem"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/UnassignedPayoutsQuery": {
      "post": {
        "tags": [
          "UnassignedPayouts"
        ],
        "operationId": "UnassignedPayouts_Query",
        "requestBody": {
          "x-name": "UnassignedPayoutsQuery",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UnassignedPayoutsQuery"
              }
            }
          },
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PaymentDisplayItem"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/CheckIfIncomingPaymentIsSettledCommand": {
      "post": {
        "tags": [
          "CheckIfIncomingPaymentIsSettled"
        ],
        "operationId": "CheckIfIncomingPaymentIsSettled_Command",
        "requestBody": {
          "x-name": "CheckIfIncomingPaymentIsSettledCommand",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CheckIfIncomingPaymentIsSettledCommand"
              }
            }
          },
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unit"
                }
              }
            }
          }
        }
      }
    },
    "/api/CheckIfOutgoingPaymentIsSettledCommand": {
      "post": {
        "tags": [
          "CheckIfOutgoingPaymentIsSettled"
        ],
        "operationId": "CheckIfOutgoingPaymentIsSettled_Command",
        "requestBody": {
          "x-name": "CheckIfOutgoingPaymentIsSettledCommand",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CheckIfOutgoingPaymentIsSettledCommand"
              }
            }
          },
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unit"
                }
              }
            }
          }
        }
      }
    },
    "/api/PaymentsByDayQuery": {
      "post": {
        "tags": [
          "PaymentsByDay"
        ],
        "operationId": "PaymentsByDay_Query",
        "requestBody": {
          "x-name": "PaymentsByDayQuery",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentsByDayQuery"
              }
            }
          },
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BookingsOfDay"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/BookingsByStateQuery": {
      "post": {
        "tags": [
          "BookingsByState"
        ],
        "operationId": "BookingsByState_Query",
        "requestBody": {
          "x-name": "BookingsByStateQuery",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BookingsByStateQuery"
              }
            }
          },
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PaymentDisplayItem3"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/AssignOutgoingPaymentCommand": {
      "post": {
        "tags": [
          "AssignOutgoingPayment"
        ],
        "operationId": "AssignOutgoingPayment_Command",
        "requestBody": {
          "x-name": "AssignOutgoingPaymentCommand",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AssignOutgoingPaymentCommand"
              }
            }
          },
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unit"
                }
              }
            }
          }
        }
      }
    },
    "/api/CheckIfPayoutIsConfirmedCommand": {
      "post": {
        "tags": [
          "CheckIfPayoutIsConfirmed"
        ],
        "operationId": "CheckIfPayoutIsConfirmed_Command",
        "requestBody": {
          "x-name": "CheckIfPayoutIsConfirmedCommand",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CheckIfPayoutIsConfirmedCommand"
              }
            }
          },
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unit"
                }
              }
            }
          }
        }
      }
    },
    "/api/PayoutQuery": {
      "post": {
        "tags": [
          "Payout"
        ],
        "operationId": "Payout_Query",
        "requestBody": {
          "x-name": "PayoutQuery",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PayoutQuery"
              }
            }
          },
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PayoutDisplayItem"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/PossiblePayoutAssignmentQuery": {
      "post": {
        "tags": [
          "PossiblePayoutAssignment"
        ],
        "operationId": "PossiblePayoutAssignment_Query",
        "requestBody": {
          "x-name": "PossiblePayoutAssignmentQuery",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PossiblePayoutAssignmentQuery"
              }
            }
          },
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PossiblePayoutAssignment"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/RefundsQuery": {
      "post": {
        "tags": [
          "Refunds"
        ],
        "operationId": "Refunds_Query",
        "requestBody": {
          "x-name": "RefundsQuery",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RefundsQuery"
              }
            }
          },
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RefundDisplayItem"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/WillPayAtCheckinCommand": {
      "post": {
        "tags": [
          "WillPayAtCheckin"
        ],
        "operationId": "WillPayAtCheckin_Command",
        "requestBody": {
          "x-name": "WillPayAtCheckinCommand",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WillPayAtCheckinCommand"
              }
            }
          },
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unit"
                }
              }
            }
          }
        }
      }
    },
    "/api/SavePaymentFileCommand": {
      "post": {
        "tags": [
          "SavePaymentFile"
        ],
        "operationId": "SavePaymentFile_Command",
        "requestBody": {
          "x-name": "SavePaymentFileCommand",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SavePaymentFileCommand"
              }
            }
          },
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unit"
                }
              }
            }
          }
        }
      }
    },
    "/api/PaymentSlipImageQuery": {
      "post": {
        "tags": [
          "PaymentSlipImage"
        ],
        "operationId": "PaymentSlipImage_Query",
        "requestBody": {
          "x-name": "PaymentSlipImageQuery",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentSlipImageQuery"
              }
            }
          },
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/api/TryAssignPaymentSlipCommand": {
      "post": {
        "tags": [
          "TryAssignPaymentSlip"
        ],
        "operationId": "TryAssignPaymentSlip_Command",
        "requestBody": {
          "x-name": "TryAssignPaymentSlipCommand",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TryAssignPaymentSlipCommand"
              }
            }
          },
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unit"
                }
              }
            }
          }
        }
      }
    },
    "/api/FetchBankStamentsFileCommand": {
      "post": {
        "tags": [
          "FetchBankStamentsFile"
        ],
        "operationId": "FetchBankStamentsFile_Command",
        "requestBody": {
          "x-name": "FetchBankStamentsFileCommand",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FetchBankStamentsFileCommand"
              }
            }
          },
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unit"
                }
              }
            }
          }
        }
      }
    },
    "/api/ProcessFetchedBankStatementsFileCommand": {
      "post": {
        "tags": [
          "ProcessFetchedBankStatementsFile"
        ],
        "operationId": "ProcessFetchedBankStatementsFile_Command",
        "requestBody": {
          "x-name": "ProcessFetchedBankStatementsFileCommand",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProcessFetchedBankStatementsFileCommand"
              }
            }
          },
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unit"
                }
              }
            }
          }
        }
      }
    },
    "/api/DuePaymentsQuery": {
      "post": {
        "tags": [
          "DuePayments"
        ],
        "operationId": "DuePayments_Query",
        "requestBody": {
          "x-name": "DuePaymentsQuery",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DuePaymentsQuery"
              }
            }
          },
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DuePaymentItem"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/SendReminderMailCommand": {
      "post": {
        "tags": [
          "SendReminderMail"
        ],
        "operationId": "SendReminderMail_Command",
        "requestBody": {
          "x-name": "SendReminderMailCommand",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SendReminderMailCommand"
              }
            }
          },
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unit"
                }
              }
            }
          }
        }
      }
    },
    "/api/DifferencesQuery": {
      "post": {
        "tags": [
          "Differences"
        ],
        "operationId": "Differences_Query",
        "requestBody": {
          "x-name": "DifferencesQuery",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DifferencesQuery"
              }
            }
          },
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DifferencesDisplayItem"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/RefundDifferenceCommand": {
      "post": {
        "tags": [
          "RefundDifference"
        ],
        "operationId": "RefundDifference_Command",
        "requestBody": {
          "x-name": "RefundDifferenceCommand",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RefundDifferenceCommand"
              }
            }
          },
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unit"
                }
              }
            }
          }
        }
      }
    },
    "/api/SendPaymentDueMailCommand": {
      "post": {
        "tags": [
          "SendPaymentDueMail"
        ],
        "operationId": "SendPaymentDueMail_Command",
        "requestBody": {
          "x-name": "SendPaymentDueMailCommand",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SendPaymentDueMailCommand"
              }
            }
          },
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unit"
                }
              }
            }
          }
        }
      }
    },
    "/api/AssignedPaymentsOfRegistrationQuery": {
      "post": {
        "tags": [
          "AssignedPaymentsOfRegistration"
        ],
        "operationId": "AssignedPaymentsOfRegistration_Query",
        "requestBody": {
          "x-name": "AssignedPaymentsOfRegistrationQuery",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AssignedPaymentsOfRegistrationQuery"
              }
            }
          },
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AssignedPaymentDisplayItem"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/AssignIncomingPaymentCommand": {
      "post": {
        "tags": [
          "AssignIncomingPayment"
        ],
        "operationId": "AssignIncomingPayment_Command",
        "requestBody": {
          "x-name": "AssignIncomingPaymentCommand",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AssignIncomingPaymentCommand"
              }
            }
          },
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unit"
                }
              }
            }
          }
        }
      }
    },
    "/api/AssignRepaymentCommand": {
      "post": {
        "tags": [
          "AssignRepayment"
        ],
        "operationId": "AssignRepayment_Command",
        "requestBody": {
          "x-name": "AssignRepaymentCommand",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AssignRepaymentCommand"
              }
            }
          },
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unit"
                }
              }
            }
          }
        }
      }
    },
    "/api/PaymentAssignmentsQuery": {
      "post": {
        "tags": [
          "PaymentAssignments"
        ],
        "operationId": "PaymentAssignments_Query",
        "requestBody": {
          "x-name": "PaymentAssignmentsQuery",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentAssignmentsQuery"
              }
            }
          },
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentAssignments"
                }
              }
            }
          }
        }
      }
    },
    "/api/PossibleRepaymentAssignmentQuery": {
      "post": {
        "tags": [
          "PossibleRepaymentAssignment"
        ],
        "operationId": "PossibleRepaymentAssignment_Query",
        "requestBody": {
          "x-name": "PossibleRepaymentAssignmentQuery",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PossibleRepaymentAssignmentQuery"
              }
            }
          },
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PossibleRepaymentAssignment"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/UnassignPaymentCommand": {
      "post": {
        "tags": [
          "UnassignPayment"
        ],
        "operationId": "UnassignPayment_Command",
        "requestBody": {
          "x-name": "UnassignPaymentCommand",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UnassignPaymentCommand"
              }
            }
          },
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unit"
                }
              }
            }
          }
        }
      }
    },
    "/api/DeleteMailCommand": {
      "post": {
        "tags": [
          "DeleteMail"
        ],
        "operationId": "DeleteMail_Command",
        "requestBody": {
          "x-name": "DeleteMailCommand",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteMailCommand"
              }
            }
          },
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unit"
                }
              }
            }
          }
        }
      }
    },
    "/api/MailsOfRegistrationQuery": {
      "post": {
        "tags": [
          "MailsOfRegistration"
        ],
        "operationId": "MailsOfRegistration_Query",
        "requestBody": {
          "x-name": "MailsOfRegistrationQuery",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MailsOfRegistrationQuery"
              }
            }
          },
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MailDisplayItem"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/PendingMailsQuery": {
      "post": {
        "tags": [
          "PendingMails"
        ],
        "operationId": "PendingMails_Query",
        "requestBody": {
          "x-name": "PendingMailsQuery",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PendingMailsQuery"
              }
            }
          },
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PendingMailListItem"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/ReleaseAllPendingMailsCommand": {
      "post": {
        "tags": [
          "ReleaseAllPendingMails"
        ],
        "operationId": "ReleaseAllPendingMails_Command",
        "requestBody": {
          "x-name": "ReleaseAllPendingMailsCommand",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReleaseAllPendingMailsCommand"
              }
            }
          },
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unit"
                }
              }
            }
          }
        }
      }
    },
    "/api/ReleaseMailCommand": {
      "post": {
        "tags": [
          "ReleaseMail"
        ],
        "operationId": "ReleaseMail_Command",
        "requestBody": {
          "x-name": "ReleaseMailCommand",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReleaseMailCommand"
              }
            }
          },
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unit"
                }
              }
            }
          }
        }
      }
    },
    "/api/AutoMailPreviewQuery": {
      "post": {
        "tags": [
          "AutoMailPreview"
        ],
        "operationId": "AutoMailPreview_Query",
        "requestBody": {
          "x-name": "AutoMailPreviewQuery",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AutoMailPreviewQuery"
              }
            }
          },
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AutoMailPreview"
                }
              }
            }
          }
        }
      }
    },
    "/api/AutoMailTemplateQuery": {
      "post": {
        "tags": [
          "AutoMailTemplate"
        ],
        "operationId": "AutoMailTemplate_Query",
        "requestBody": {
          "x-name": "AutoMailTemplateQuery",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AutoMailTemplateQuery"
              }
            }
          },
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AutoMailTemplateDisplayItem"
                }
              }
            }
          }
        }
      }
    },
    "/api/AutoMailTemplatesQuery": {
      "post": {
        "tags": [
          "AutoMailTemplates"
        ],
        "operationId": "AutoMailTemplates_Query",
        "requestBody": {
          "x-name": "AutoMailTemplatesQuery",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AutoMailTemplatesQuery"
              }
            }
          },
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AutoMailTemplates"
                }
              }
            }
          }
        }
      }
    },
    "/api/CreateAutoMailTemplateCommand": {
      "post": {
        "tags": [
          "CreateAutoMailTemplate"
        ],
        "operationId": "CreateAutoMailTemplate_Command",
        "requestBody": {
          "x-name": "CreateAutoMailTemplateCommand",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateAutoMailTemplateCommand"
              }
            }
          },
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "guid"
                }
              }
            }
          }
        }
      }
    },
    "/api/DeleteMailTemplateCommand": {
      "post": {
        "tags": [
          "DeleteMailTemplate"
        ],
        "operationId": "DeleteMailTemplate_Command",
        "requestBody": {
          "x-name": "DeleteMailTemplateCommand",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteMailTemplateCommand"
              }
            }
          },
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unit"
                }
              }
            }
          }
        }
      }
    },
    "/api/UpdateAutoMailConfigurationCommand": {
      "post": {
        "tags": [
          "UpdateAutoMailConfiguration"
        ],
        "operationId": "UpdateAutoMailConfiguration_Command",
        "requestBody": {
          "x-name": "UpdateAutoMailConfigurationCommand",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateAutoMailConfigurationCommand"
              }
            }
          },
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unit"
                }
              }
            }
          }
        }
      }
    },
    "/api/UpdateAutoMailTemplateCommand": {
      "post": {
        "tags": [
          "UpdateAutoMailTemplate"
        ],
        "operationId": "UpdateAutoMailTemplate_Command",
        "requestBody": {
          "x-name": "UpdateAutoMailTemplateCommand",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateAutoMailTemplateCommand"
              }
            }
          },
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unit"
                }
              }
            }
          }
        }
      }
    },
    "/api/SendMailCommand": {
      "post": {
        "tags": [
          "SendMail"
        ],
        "operationId": "SendMail_Command",
        "requestBody": {
          "x-name": "SendMailCommand",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SendMailCommand"
              }
            }
          },
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unit"
                }
              }
            }
          }
        }
      }
    },
    "/api/PossibleMailTypesQuery": {
      "post": {
        "tags": [
          "PossibleMailTypes"
        ],
        "operationId": "PossibleMailTypes_Query",
        "requestBody": {
          "x-name": "PossibleMailTypesQuery",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PossibleMailTypesQuery"
              }
            }
          },
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MailTypeItem"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/FixInvalidAddressCommand": {
      "post": {
        "tags": [
          "FixInvalidAddress"
        ],
        "operationId": "FixInvalidAddress_Command",
        "requestBody": {
          "x-name": "FixInvalidAddressCommand",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FixInvalidAddressCommand"
              }
            }
          },
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unit"
                }
              }
            }
          }
        }
      }
    },
    "/api/InvalidAddressesQuery": {
      "post": {
        "tags": [
          "InvalidAddresses"
        ],
        "operationId": "InvalidAddresses_Query",
        "requestBody": {
          "x-name": "InvalidAddressesQuery",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InvalidAddressesQuery"
              }
            }
          },
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/InvalidAddress"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/NotReceivedMailsQuery": {
      "post": {
        "tags": [
          "NotReceivedMails"
        ],
        "operationId": "NotReceivedMails_Query",
        "requestBody": {
          "x-name": "NotReceivedMailsQuery",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NotReceivedMailsQuery"
              }
            }
          },
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NotReceivedMail"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/ImportMailsFromImapCommand": {
      "post": {
        "tags": [
          "ImportMailsFromImap"
        ],
        "operationId": "ImportMailsFromImap_Command",
        "requestBody": {
          "x-name": "ImportMailsFromImapCommand",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ImportMailsFromImapCommand"
              }
            }
          },
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unit"
                }
              }
            }
          }
        }
      }
    },
    "/api/ImportMailsFromImapForAllActiveEventsCommand": {
      "post": {
        "tags": [
          "ImportMailsFromImapForAllActiveEvents"
        ],
        "operationId": "ImportMailsFromImapForAllActiveEvents_Command",
        "requestBody": {
          "x-name": "ImportMailsFromImapForAllActiveEventsCommand",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ImportMailsFromImapForAllActiveEventsCommand"
              }
            }
          },
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unit"
                }
              }
            }
          }
        }
      }
    },
    "/api/TryAssignImportedMailCommand": {
      "post": {
        "tags": [
          "TryAssignImportedMail"
        ],
        "operationId": "TryAssignImportedMail_Command",
        "requestBody": {
          "x-name": "TryAssignImportedMailCommand",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TryAssignImportedMailCommand"
              }
            }
          },
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unit"
                }
              }
            }
          }
        }
      }
    },
    "/api/ProcessMailEventsCommand": {
      "post": {
        "tags": [
          "ProcessMailEvents"
        ],
        "operationId": "ProcessMailEvents_Command",
        "requestBody": {
          "x-name": "ProcessMailEventsCommand",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProcessMailEventsCommand"
              }
            }
          },
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unit"
                }
              }
            }
          }
        }
      }
    },
    "/api/AutoMailPlaceholderQuery": {
      "post": {
        "tags": [
          "AutoMailPlaceholder"
        ],
        "operationId": "AutoMailPlaceholder_Query",
        "requestBody": {
          "x-name": "AutoMailPlaceholderQuery",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AutoMailPlaceholderQuery"
              }
            }
          },
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PlaceholderDescription"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/ComposeAndSendMailCommand": {
      "post": {
        "tags": [
          "ComposeAndSendMail"
        ],
        "operationId": "ComposeAndSendMail_Command",
        "requestBody": {
          "x-name": "ComposeAndSendMailCommand",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ComposeAndSendMailCommand"
              }
            }
          },
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unit"
                }
              }
            }
          }
        }
      }
    },
    "/api/CreateBulkMailsCommand": {
      "post": {
        "tags": [
          "CreateBulkMails"
        ],
        "operationId": "CreateBulkMails_Command",
        "requestBody": {
          "x-name": "CreateBulkMailsCommand",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateBulkMailsCommand"
              }
            }
          },
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unit"
                }
              }
            }
          }
        }
      }
    },
    "/api/PossibleAudiencesQuery": {
      "post": {
        "tags": [
          "PossibleAudiences"
        ],
        "operationId": "PossibleAudiences_Query",
        "requestBody": {
          "x-name": "PossibleAudiencesQuery",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PossibleAudiencesQuery"
              }
            }
          },
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PossibleAudience"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/ReleaseBulkMailsCommand": {
      "post": {
        "tags": [
          "ReleaseBulkMails"
        ],
        "operationId": "ReleaseBulkMails_Command",
        "requestBody": {
          "x-name": "ReleaseBulkMailsCommand",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReleaseBulkMailsCommand"
              }
            }
          },
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unit"
                }
              }
            }
          }
        }
      }
    },
    "/api/TranslationQuery": {
      "post": {
        "tags": [
          "Translation"
        ],
        "operationId": "Translation_Query",
        "requestBody": {
          "x-name": "TranslationQuery",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TranslationQuery"
              }
            }
          },
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/DomainEventCatalogQuery": {
      "post": {
        "tags": [
          "DomainEventCatalog"
        ],
        "operationId": "DomainEventCatalog_Query",
        "requestBody": {
          "x-name": "DomainEventCatalogQuery",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DomainEventCatalogQuery"
              }
            }
          },
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DomainEventCatalogItem"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/DomainEventsQuery": {
      "post": {
        "tags": [
          "DomainEvents"
        ],
        "operationId": "DomainEvents_Query",
        "requestBody": {
          "x-name": "DomainEventsQuery",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DomainEventsQuery"
              }
            }
          },
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DomainEventDisplayItem"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/SaveDomainEventCommand": {
      "post": {
        "tags": [
          "SaveDomainEvent"
        ],
        "operationId": "SaveDomainEvent_Command",
        "requestBody": {
          "x-name": "SaveDomainEventCommand",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveDomainEventCommand"
              }
            }
          },
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unit"
                }
              }
            }
          }
        }
      }
    },
    "/api/StartUpdateReadModelsOfEventCommand": {
      "post": {
        "tags": [
          "StartUpdateReadModelsOfEvent"
        ],
        "operationId": "StartUpdateReadModelsOfEvent_Command",
        "requestBody": {
          "x-name": "StartUpdateReadModelsOfEventCommand",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StartUpdateReadModelsOfEventCommand"
              }
            }
          },
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unit"
                }
              }
            }
          }
        }
      }
    },
    "/api/UpdateReadModelCommand": {
      "post": {
        "tags": [
          "UpdateReadModel"
        ],
        "operationId": "UpdateReadModel_Command",
        "requestBody": {
          "x-name": "UpdateReadModelCommand",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateReadModelCommand"
              }
            }
          },
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unit"
                }
              }
            }
          }
        }
      }
    },
    "/api/HostingOffersQuery": {
      "post": {
        "tags": [
          "HostingOffers"
        ],
        "operationId": "HostingOffers_Query",
        "requestBody": {
          "x-name": "HostingOffersQuery",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/HostingOffersQuery"
              }
            }
          },
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HostingOffers"
                }
              }
            }
          }
        }
      }
    },
    "/api/HostingRequestsQuery": {
      "post": {
        "tags": [
          "HostingRequests"
        ],
        "operationId": "HostingRequests_Query",
        "requestBody": {
          "x-name": "HostingRequestsQuery",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/HostingRequestsQuery"
              }
            }
          },
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HostingRequests"
                }
              }
            }
          }
        }
      }
    },
    "/api/CreateEventCommand": {
      "post": {
        "tags": [
          "CreateEvent"
        ],
        "operationId": "CreateEvent_Command",
        "requestBody": {
          "x-name": "CreateEventCommand",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateEventCommand"
              }
            }
          },
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unit"
                }
              }
            }
          }
        }
      }
    },
    "/api/EventQuery": {
      "post": {
        "tags": [
          "Event"
        ],
        "operationId": "Event_Query",
        "requestBody": {
          "x-name": "EventQuery",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EventQuery"
              }
            }
          },
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/OpenRegistrationCommand": {
      "post": {
        "tags": [
          "OpenRegistration"
        ],
        "operationId": "OpenRegistration_Command",
        "requestBody": {
          "x-name": "OpenRegistrationCommand",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OpenRegistrationCommand"
              }
            }
          },
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unit"
                }
              }
            }
          }
        }
      }
    },
    "/api/SearchEventQuery": {
      "post": {
        "tags": [
          "SearchEvent"
        ],
        "operationId": "SearchEvent_Query",
        "requestBody": {
          "x-name": "SearchEventQuery",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SearchEventQuery"
              }
            }
          },
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EventSearchResult"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/AddUserToRoleInEventCommand": {
      "post": {
        "tags": [
          "AddUserToRoleInEvent"
        ],
        "operationId": "AddUserToRoleInEvent_Command",
        "requestBody": {
          "x-name": "AddUserToRoleInEventCommand",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddUserToRoleInEventCommand"
              }
            }
          },
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "guid"
                }
              }
            }
          }
        }
      }
    },
    "/api/EventsOfUserQuery": {
      "post": {
        "tags": [
          "EventsOfUser"
        ],
        "operationId": "EventsOfUser_Query",
        "requestBody": {
          "x-name": "EventsOfUserQuery",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EventsOfUserQuery"
              }
            }
          },
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserInEventDisplayItem"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/RemoveUserFromRoleInEventCommand": {
      "post": {
        "tags": [
          "RemoveUserFromRoleInEvent"
        ],
        "operationId": "RemoveUserFromRoleInEvent_Command",
        "requestBody": {
          "x-name": "RemoveUserFromRoleInEventCommand",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RemoveUserFromRoleInEventCommand"
              }
            }
          },
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unit"
                }
              }
            }
          }
        }
      }
    },
    "/api/UsersOfEventQuery": {
      "post": {
        "tags": [
          "UsersOfEvent"
        ],
        "operationId": "UsersOfEvent_Query",
        "requestBody": {
          "x-name": "UsersOfEventQuery",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UsersOfEventQuery"
              }
            }
          },
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserInEventDisplayItem"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/AccessRequestsOfEventQuery": {
      "post": {
        "tags": [
          "AccessRequestsOfEvent"
        ],
        "operationId": "AccessRequestsOfEvent_Query",
        "requestBody": {
          "x-name": "AccessRequestsOfEventQuery",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AccessRequestsOfEventQuery"
              }
            }
          },
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AccessRequestOfEvent"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/RequestAccessCommand": {
      "post": {
        "tags": [
          "RequestAccess"
        ],
        "operationId": "RequestAccess_Command",
        "requestBody": {
          "x-name": "RequestAccessCommand",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestAccessCommand"
              }
            }
          },
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "guid"
                }
              }
            }
          }
        }
      }
    },
    "/api/RespondToRequestCommand": {
      "post": {
        "tags": [
          "RespondToRequest"
        ],
        "operationId": "RespondToRequest_Command",
        "requestBody": {
          "x-name": "RespondToRequestCommand",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RespondToRequestCommand"
              }
            }
          },
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unit"
                }
              }
            }
          }
        }
      }
    },
    "/api/RightsOfUserInEventQuery": {
      "post": {
        "tags": [
          "RightsOfUserInEvent"
        ],
        "operationId": "RightsOfUserInEvent_Query",
        "requestBody": {
          "x-name": "RightsOfUserInEventQuery",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RightsOfUserInEventQuery"
              }
            }
          },
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Unit": {
        "type": "object",
        "description": "Represents a void type, since Void is not a valid return type in C#.",
        "additionalProperties": false
      },
      "AddSpotCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "asFollower": {
            "type": "boolean"
          },
          "eventId": {
            "type": "string",
            "format": "guid"
          },
          "registrableId": {
            "type": "string",
            "format": "guid"
          },
          "registrationId": {
            "type": "string",
            "format": "guid"
          }
        }
      },
      "RemoveSpotCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "eventId": {
            "type": "string",
            "format": "guid"
          },
          "registrableId": {
            "type": "string",
            "format": "guid"
          },
          "registrationId": {
            "type": "string",
            "format": "guid"
          }
        }
      },
      "SpotDisplayItem": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "firstPartnerJoined": {
            "type": "string",
            "format": "date-time"
          },
          "id": {
            "type": "string",
            "format": "guid"
          },
          "isCore": {
            "type": "boolean"
          },
          "isWaitingList": {
            "type": "boolean"
          },
          "partnerName": {
            "type": "string",
            "nullable": true
          },
          "partnerRegistrationId": {
            "type": "string",
            "format": "guid",
            "nullable": true
          },
          "registrableName": {
            "type": "string"
          },
          "registrableNameSecondary": {
            "type": "string",
            "nullable": true
          },
          "registrableId": {
            "type": "string",
            "format": "guid"
          },
          "type": {
            "$ref": "#/components/schemas/RegistrableType"
          },
          "roleText": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "RegistrableType": {
        "type": "integer",
        "description": "",
        "x-enumNames": [
          "Single",
          "Double"
        ],
        "enum": [
          1,
          2
        ]
      },
      "SpotsOfRegistrationQuery": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "eventId": {
            "type": "string",
            "format": "guid"
          },
          "registrationId": {
            "type": "string",
            "format": "guid"
          }
        }
      },
      "RegistrationDisplayItem": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "format": "guid"
          },
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "isReduced": {
            "type": "boolean"
          },
          "isWaitingList": {
            "type": "boolean",
            "nullable": true
          },
          "language": {
            "type": "string",
            "nullable": true
          },
          "paid": {
            "type": "number",
            "format": "decimal"
          },
          "partnerId": {
            "type": "string",
            "format": "guid",
            "nullable": true
          },
          "partnerOriginal": {
            "type": "string",
            "nullable": true
          },
          "partnerName": {
            "type": "string",
            "nullable": true
          },
          "phoneNormalized": {
            "type": "string",
            "nullable": true
          },
          "phoneFormatted": {
            "type": "string",
            "nullable": true
          },
          "price": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "receivedAt": {
            "type": "string",
            "format": "date-time"
          },
          "remarks": {
            "type": "string",
            "nullable": true
          },
          "reminderLevel": {
            "type": "integer",
            "format": "int32"
          },
          "smsCount": {
            "type": "integer",
            "format": "int32"
          },
          "soldOutMessage": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "$ref": "#/components/schemas/RegistrationState"
          },
          "statusText": {
            "type": "string"
          },
          "willPayAtCheckin": {
            "type": "boolean"
          },
          "fallbackToPartyPass": {
            "type": "boolean",
            "nullable": true
          },
          "spots": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/SpotDisplayItem"
            }
          },
          "payments": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/AssignedPaymentDisplayItem"
            }
          }
        }
      },
      "RegistrationState": {
        "type": "integer",
        "description": "",
        "x-enumNames": [
          "Received",
          "Paid",
          "Cancelled"
        ],
        "enum": [
          1,
          2,
          4
        ]
      },
      "AssignedPaymentDisplayItem": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "amount": {
            "type": "number",
            "format": "decimal"
          },
          "bookingDate": {
            "type": "string",
            "format": "date-time"
          },
          "currency": {
            "type": "string",
            "nullable": true
          },
          "paymentAssignmentId": {
            "type": "string",
            "format": "guid"
          }
        }
      },
      "RegistrationQuery": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "eventId": {
            "type": "string",
            "format": "guid"
          },
          "registrationId": {
            "type": "string",
            "format": "guid"
          }
        }
      },
      "SwapFirstLastNameCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "eventId": {
            "type": "string",
            "format": "guid"
          },
          "registrationId": {
            "type": "string",
            "format": "guid"
          }
        }
      },
      "RegistrationMatch": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "registrationId": {
            "type": "string",
            "format": "guid"
          },
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "isWaitingList": {
            "type": "boolean"
          },
          "state": {
            "$ref": "#/components/schemas/RegistrationState"
          },
          "amount": {
            "type": "number",
            "format": "decimal"
          },
          "amountPaid": {
            "type": "number",
            "format": "decimal"
          },
          "stateText": {
            "type": "string"
          },
          "spots": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SpotShort"
            }
          },
          "receivedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "SpotShort": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "name": {
            "type": "string"
          },
          "secondary": {
            "type": "string",
            "nullable": true
          },
          "isWaitingList": {
            "type": "boolean"
          }
        }
      },
      "SearchRegistrationQuery": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "eventId": {
            "type": "string",
            "format": "guid"
          },
          "searchString": {
            "type": "string",
            "nullable": true
          },
          "states": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/RegistrationState"
            }
          }
        }
      },
      "ProcessRawRegistrationCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "rawRegistrationId": {
            "type": "string",
            "format": "guid"
          }
        }
      },
      "SetReductionCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "eventId": {
            "type": "string",
            "format": "guid"
          },
          "isReduced": {
            "type": "boolean"
          },
          "registrationId": {
            "type": "string",
            "format": "guid"
          }
        }
      },
      "AllExternalRegistrationIdentifiersQuery": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "registrationFormExternalIdentifier": {
            "type": "string"
          }
        }
      },
      "RecalculatePriceCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "registrationId": {
            "type": "string",
            "format": "guid"
          }
        }
      },
      "CheckinView": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "dynamicHeaders": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CheckinViewItem"
            }
          }
        }
      },
      "CheckinViewItem": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "admittedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "columns": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "email": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "registrationId": {
            "type": "string",
            "format": "guid"
          },
          "status": {
            "type": "string"
          },
          "unsettledAmount": {
            "type": "number",
            "format": "decimal"
          }
        }
      },
      "CheckinQuery": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "eventId": {
            "type": "string",
            "format": "guid"
          }
        }
      },
      "PartyItem": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "details": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PartyDetailItem"
            }
          },
          "direct": {
            "type": "integer",
            "format": "int32"
          },
          "id": {
            "type": "string",
            "format": "guid"
          },
          "name": {
            "type": "string"
          },
          "partyPassFallbacksOnWaitingList": {
            "type": "integer",
            "format": "int32"
          },
          "potential": {
            "type": "integer",
            "format": "int32"
          },
          "potentialOnWaitingList": {
            "type": "integer",
            "format": "int32"
          },
          "sortyKey": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "total": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "PartyDetailItem": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "format": "guid"
          },
          "name": {
            "type": "string"
          },
          "participants": {
            "type": "integer",
            "format": "int32"
          },
          "potential": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "PartyOverviewQuery": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "eventId": {
            "type": "string",
            "format": "guid"
          }
        }
      },
      "ChangeUnmatchedPartnerRegistrationToSingleRegistrationCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "eventId": {
            "type": "string",
            "format": "guid"
          },
          "registrationId": {
            "type": "string",
            "format": "guid"
          }
        }
      },
      "MatchPartnerRegistrationsCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "eventId": {
            "type": "string",
            "format": "guid"
          },
          "registrationId1": {
            "type": "string",
            "format": "guid"
          },
          "registrationId2": {
            "type": "string",
            "format": "guid"
          }
        }
      },
      "PotentialPartnerMatch": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "email": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "isWaitingList": {
            "type": "boolean"
          },
          "lastName": {
            "type": "string"
          },
          "matchedPartner": {
            "type": "string"
          },
          "partner": {
            "type": "string"
          },
          "registrables": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "registrationId": {
            "type": "string",
            "format": "guid"
          },
          "registrationId_Partner": {
            "type": "string",
            "format": "guid",
            "nullable": true
          },
          "state": {
            "type": "string"
          }
        }
      },
      "PotentialPartnersQuery": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "eventId": {
            "type": "string",
            "format": "guid"
          },
          "registrationId": {
            "type": "string",
            "format": "guid"
          },
          "searchString": {
            "type": "string"
          }
        }
      },
      "RegistrationsWithUnmatchedPartnerQuery": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "eventId": {
            "type": "string",
            "format": "guid"
          }
        }
      },
      "UnbindPartnerRegistrationCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "eventId": {
            "type": "string",
            "format": "guid"
          },
          "registrationId": {
            "type": "string",
            "format": "guid"
          }
        }
      },
      "AddIndividualReductionCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "amount": {
            "type": "number",
            "format": "decimal"
          },
          "eventId": {
            "type": "string",
            "format": "guid"
          },
          "reason": {
            "type": "string"
          },
          "reductionId": {
            "type": "string",
            "format": "guid"
          },
          "registrationId": {
            "type": "string",
            "format": "guid"
          }
        }
      },
      "CheckRegistrationAfterPaymentCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "registrationId": {
            "type": "string",
            "format": "guid"
          }
        }
      },
      "CancelRegistrationCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "eventId": {
            "type": "string",
            "format": "guid"
          },
          "ignorePayments": {
            "type": "boolean"
          },
          "reason": {
            "type": "string"
          },
          "refundPercentage": {
            "type": "number",
            "format": "decimal"
          },
          "registrationId": {
            "type": "string",
            "format": "guid"
          },
          "received": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        }
      },
      "RegistrationFormType": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "pathType": {
            "$ref": "#/components/schemas/FormPathType"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "FormPathType": {
        "type": "integer",
        "description": "",
        "x-enumNames": [
          "Single",
          "Partner"
        ],
        "enum": [
          1,
          2
        ]
      },
      "RegistrationFormTypesQuery": {
        "type": "object",
        "additionalProperties": false
      },
      "AvailableQuestionMapping": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "type": {
            "$ref": "#/components/schemas/QuestionMappingType"
          },
          "text": {
            "type": "string"
          }
        }
      },
      "QuestionMappingType": {
        "type": "integer",
        "description": "",
        "x-enumNames": [
          "FirstName",
          "LastName",
          "EMail",
          "Phone",
          "Town",
          "Remarks",
          "Partner"
        ],
        "enum": [
          1,
          2,
          3,
          4,
          5,
          6,
          10
        ]
      },
      "AvailableQuestionMappingsQuery": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "eventId": {
            "type": "string",
            "format": "guid"
          }
        }
      },
      "AvailableQuestionOptionMapping": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "combinedId": {
            "type": "string"
          },
          "id": {
            "type": "string",
            "format": "guid",
            "nullable": true
          },
          "type": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/MappingType"
              }
            ]
          },
          "language": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "MappingType": {
        "type": "integer",
        "description": "",
        "x-enumNames": [
          "SingleRegistrable",
          "PartnerRegistrable",
          "PartnerRegistrableLeader",
          "PartnerRegistrableFollower",
          "Language",
          "Reduction",
          "RoleLeader",
          "RoleFollower"
        ],
        "enum": [
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8
        ]
      },
      "AvailableQuestionOptionMappingsQuery": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "eventId": {
            "type": "string",
            "format": "guid"
          }
        }
      },
      "SaveRegistrationFormMappingsCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "eventId": {
            "type": "string",
            "format": "guid"
          },
          "mappings": {
            "$ref": "#/components/schemas/RegistrationFormGroup"
          },
          "formId": {
            "type": "string",
            "format": "guid"
          }
        }
      },
      "RegistrationFormGroup": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "format": "guid"
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "sections": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FormSection"
            }
          }
        }
      },
      "FormSection": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "sortKey": {
            "type": "integer",
            "format": "int32"
          },
          "questions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/QuestionMappingDisplayItem"
            }
          }
        }
      },
      "QuestionMappingDisplayItem": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "format": "guid"
          },
          "question": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "$ref": "#/components/schemas/QuestionType"
          },
          "options": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/QuestionOptionMappingDisplayItem"
            }
          },
          "sortKey": {
            "type": "integer",
            "format": "int32"
          },
          "mappable": {
            "type": "boolean"
          },
          "mapping": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/QuestionMappingType"
              }
            ]
          }
        }
      },
      "QuestionType": {
        "type": "integer",
        "description": "",
        "x-enumNames": [
          "Checkbox",
          "CheckboxGrid",
          "Date",
          "Datetime",
          "Duration",
          "Grid",
          "Image",
          "List",
          "MultipleChoice",
          "PageBreak",
          "ParagraphText",
          "Scale",
          "SectionHeader",
          "Text",
          "Time"
        ],
        "enum": [
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8,
          9,
          10,
          11,
          12,
          13,
          14,
          15
        ]
      },
      "QuestionOptionMappingDisplayItem": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "format": "guid"
          },
          "answer": {
            "type": "string",
            "nullable": true
          },
          "mappedRegistrables": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/AvailableQuestionOptionMapping"
            }
          }
        }
      },
      "DeleteRegistrationFormCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "eventId": {
            "type": "string",
            "format": "guid"
          },
          "registrationFormId": {
            "type": "string",
            "format": "guid"
          }
        }
      },
      "RegistrationFormItem": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "registrationFormId": {
            "type": "string",
            "format": "guid",
            "nullable": true
          },
          "externalIdentifier": {
            "type": "string"
          },
          "state": {
            "$ref": "#/components/schemas/State"
          },
          "title": {
            "type": "string"
          },
          "lastImport": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "pendingRawFormCreated": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "pendingRawFormId": {
            "type": "string",
            "format": "guid",
            "nullable": true
          },
          "deletable": {
            "type": "boolean"
          }
        }
      },
      "State": {
        "type": "integer",
        "description": "",
        "x-enumNames": [
          "Setup",
          "RegistrationOpen",
          "RegistrationClosed",
          "Finished"
        ],
        "enum": [
          1,
          2,
          3,
          4
        ]
      },
      "PendingRegistrationFormQuery": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "eventId": {
            "type": "string",
            "format": "guid"
          }
        }
      },
      "SaveRegistrationFormDefinitionCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "eventId": {
            "type": "string",
            "format": "guid"
          },
          "formId": {
            "type": "string"
          }
        }
      },
      "FormPathsQuery": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "eventId": {
            "type": "string",
            "format": "guid"
          }
        }
      },
      "CreateRegistrableCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "parameters": {
            "$ref": "#/components/schemas/CreateRegistrableParameters"
          },
          "eventId": {
            "type": "string",
            "format": "guid"
          }
        }
      },
      "CreateRegistrableParameters": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "format": "guid"
          },
          "name": {
            "type": "string"
          },
          "isDoubleRegistrable": {
            "type": "boolean"
          }
        }
      },
      "DeleteRegistrableCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "eventId": {
            "type": "string",
            "format": "guid"
          },
          "registrableId": {
            "type": "string",
            "format": "guid"
          }
        }
      },
      "RegistrablesOverview": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "singleRegistrables": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SingleRegistrableDisplayItem"
            }
          },
          "doubleRegistrables": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DoubleRegistrableDisplayItem"
            }
          }
        }
      },
      "SingleRegistrableDisplayItem": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "format": "guid"
          },
          "name": {
            "type": "string"
          },
          "nameSecondary": {
            "type": "string",
            "nullable": true
          },
          "tag": {
            "type": "string",
            "nullable": true
          },
          "accepted": {
            "type": "integer",
            "format": "int32"
          },
          "onWaitingList": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "spotsAvailable": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "hasWaitingList": {
            "type": "boolean"
          },
          "isDeletable": {
            "type": "boolean"
          },
          "automaticPromotionFromWaitingList": {
            "type": "boolean"
          },
          "class": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SpotState"
            }
          },
          "waitingList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SpotState"
            }
          }
        }
      },
      "SpotState": {
        "type": "integer",
        "description": "",
        "x-enumNames": [
          "Available",
          "Reserved",
          "Registered",
          "Paid"
        ],
        "enum": [
          1,
          2,
          3,
          4
        ]
      },
      "DoubleRegistrableDisplayItem": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "format": "guid"
          },
          "name": {
            "type": "string"
          },
          "nameSecondary": {
            "type": "string",
            "nullable": true
          },
          "tag": {
            "type": "string",
            "nullable": true
          },
          "couplesOnWaitingList": {
            "type": "integer",
            "format": "int32"
          },
          "followersAccepted": {
            "type": "integer",
            "format": "int32"
          },
          "followersOnWaitingList": {
            "type": "integer",
            "format": "int32"
          },
          "leadersAccepted": {
            "type": "integer",
            "format": "int32"
          },
          "leadersOnWaitingList": {
            "type": "integer",
            "format": "int32"
          },
          "maximumAllowedImbalance": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "spotsAvailable": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "hasWaitingList": {
            "type": "boolean"
          },
          "isDeletable": {
            "type": "boolean"
          },
          "automaticPromotionFromWaitingList": {
            "type": "boolean"
          },
          "class": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DoubleSpotState"
            }
          },
          "waitingList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DoubleSpotState"
            }
          }
        }
      },
      "DoubleSpotState": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "leader": {
            "$ref": "#/components/schemas/SpotState"
          },
          "follower": {
            "$ref": "#/components/schemas/SpotState"
          },
          "linked": {
            "type": "boolean"
          }
        }
      },
      "RegistrablesOverviewQuery": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "eventId": {
            "type": "string",
            "format": "guid"
          }
        }
      },
      "RegistrableDisplayItem": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "hasWaitingList": {
            "type": "boolean"
          },
          "id": {
            "type": "string",
            "format": "guid"
          },
          "isDoubleRegistrable": {
            "type": "boolean"
          },
          "name": {
            "type": "string"
          },
          "showInMailListOrder": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "sortKey": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "RegistrablesQuery": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "eventId": {
            "type": "string",
            "format": "guid"
          }
        }
      },
      "SetDoubleRegistrableLimitsCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "eventId": {
            "type": "string",
            "format": "guid"
          },
          "maximumCouples": {
            "type": "integer",
            "format": "int32"
          },
          "maximumImbalance": {
            "type": "integer",
            "format": "int32"
          },
          "registrableId": {
            "type": "string",
            "format": "guid"
          }
        }
      },
      "SetSingleRegistrableLimitsCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "eventId": {
            "type": "string",
            "format": "guid"
          },
          "maximumParticipants": {
            "type": "integer",
            "format": "int32"
          },
          "registrableId": {
            "type": "string",
            "format": "guid"
          }
        }
      },
      "CheckIfRegistrationIsPromotedCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "registrationId": {
            "type": "string",
            "format": "guid"
          }
        }
      },
      "TryPromoteFromWaitingListCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "eventId": {
            "type": "string",
            "format": "guid"
          },
          "registrableId": {
            "type": "string",
            "format": "guid"
          },
          "registrationId": {
            "type": "string",
            "format": "guid",
            "nullable": true
          }
        }
      },
      "WaitingListSpot": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "follower": {
            "$ref": "#/components/schemas/WaitingListRegistration"
          },
          "isOnWaitingList": {
            "type": "boolean"
          },
          "isPartnerRegistration": {
            "type": "boolean"
          },
          "joined": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "leader": {
            "$ref": "#/components/schemas/WaitingListRegistration"
          },
          "placeholderPartner": {
            "type": "string"
          },
          "registrableName": {
            "type": "string"
          }
        }
      },
      "WaitingListRegistration": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "firstName": {
            "type": "string"
          },
          "id": {
            "type": "string",
            "format": "guid",
            "nullable": true
          },
          "lastName": {
            "type": "string"
          },
          "optionsSent": {
            "type": "boolean"
          },
          "state": {
            "$ref": "#/components/schemas/RegistrationState"
          }
        }
      },
      "RegistrationsOnWaitingListQuery": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "eventId": {
            "type": "string",
            "format": "guid"
          }
        }
      },
      "SetFallbackToPartyPassCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "eventId": {
            "type": "string",
            "format": "guid"
          },
          "registrationId": {
            "type": "string",
            "format": "guid"
          }
        }
      },
      "ActivateAutomaticPromotionCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "eventId": {
            "type": "string",
            "format": "guid"
          },
          "tryPromoteImmediately": {
            "type": "boolean"
          },
          "registrableId": {
            "type": "string",
            "format": "guid"
          }
        }
      },
      "DeactivateAutomaticPromotionCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "eventId": {
            "type": "string",
            "format": "guid"
          },
          "registrableId": {
            "type": "string",
            "format": "guid"
          }
        }
      },
      "RegistrableTagDisplayItem": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "tagId": {
            "type": "string",
            "format": "guid"
          },
          "text": {
            "type": "string"
          },
          "tag": {
            "type": "string"
          },
          "sortKey": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "RegistrableTagsQuery": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "eventId": {
            "type": "string",
            "format": "guid"
          }
        }
      },
      "DeleteReductionCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "registrableId": {
            "type": "string",
            "format": "guid"
          },
          "reductionId": {
            "type": "string",
            "format": "guid"
          },
          "eventId": {
            "type": "string",
            "format": "guid"
          }
        }
      },
      "SaveReductionCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "registrableId": {
            "type": "string",
            "format": "guid"
          },
          "reductionId": {
            "type": "string",
            "format": "guid"
          },
          "amount": {
            "type": "number",
            "format": "decimal"
          },
          "registrableId1_ReductionActivatedIfCombinedWith": {
            "type": "string",
            "format": "guid",
            "nullable": true
          },
          "registrableId2_ReductionActivatedIfCombinedWith": {
            "type": "string",
            "format": "guid",
            "nullable": true
          },
          "eventId": {
            "type": "string",
            "format": "guid"
          }
        }
      },
      "RegistrablePricing": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "registrableId": {
            "type": "string",
            "format": "guid"
          },
          "price": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "reducedPrice": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "registrableName": {
            "type": "string"
          },
          "reductions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PricingReduction"
            }
          }
        }
      },
      "PricingReduction": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "format": "guid"
          },
          "amount": {
            "type": "number",
            "format": "decimal"
          },
          "registrableId1_ReductionActivatedIfCombinedWith": {
            "type": "string",
            "format": "guid",
            "nullable": true
          },
          "registrableId2_ReductionActivatedIfCombinedWith": {
            "type": "string",
            "format": "guid",
            "nullable": true
          }
        }
      },
      "PricingQuery": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "eventId": {
            "type": "string",
            "format": "guid"
          }
        }
      },
      "SetRegistrablesPricesCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "eventId": {
            "type": "string",
            "format": "guid"
          },
          "registrableId": {
            "type": "string",
            "format": "guid"
          },
          "price": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "reducedPrice": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          }
        }
      },
      "RegistrableDisplayInfo": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "name": {
            "type": "string"
          },
          "nameSecondary": {
            "type": "string",
            "nullable": true
          },
          "hasWaitingList": {
            "type": "boolean"
          },
          "maximumAllowedImbalance": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "maximumDoubleSeats": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "maximumSingleSeats": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "participants": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SpotDisplayInfo"
            }
          },
          "waitingList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SpotDisplayInfo"
            }
          },
          "automaticPromotionFromWaitingList": {
            "type": "boolean"
          },
          "acceptedLeaders": {
            "type": "integer",
            "format": "int32"
          },
          "acceptedFollowers": {
            "type": "integer",
            "format": "int32"
          },
          "leadersOnWaitingList": {
            "type": "integer",
            "format": "int32"
          },
          "followersOnWaitingList": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "SpotDisplayInfo": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "leader": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/RegistrationDisplayInfo"
              }
            ]
          },
          "follower": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/RegistrationDisplayInfo"
              }
            ]
          },
          "isOnWaitingList": {
            "type": "boolean"
          },
          "isPartnerRegistration": {
            "type": "boolean"
          },
          "joined": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "placeholderPartner": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "RegistrationDisplayInfo": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "format": "guid",
            "nullable": true
          },
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "state": {
            "$ref": "#/components/schemas/RegistrationState"
          }
        }
      },
      "ParticipantsOfRegistrableQuery": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "eventId": {
            "type": "string",
            "format": "guid"
          },
          "registrableId": {
            "type": "string",
            "format": "guid"
          }
        }
      },
      "ProcessReceivedSmsCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "sms": {
            "$ref": "#/components/schemas/TwilioSms"
          }
        }
      },
      "TwilioSms": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "accountSid": {
            "type": "string"
          },
          "apiVersion": {
            "type": "string"
          },
          "body": {
            "type": "string"
          },
          "from": {
            "type": "string"
          },
          "fromCity": {
            "type": "string"
          },
          "fromCountry": {
            "type": "string"
          },
          "fromState": {
            "type": "string"
          },
          "fromZip": {
            "type": "string"
          },
          "messageSid": {
            "type": "string"
          },
          "numMedia": {
            "type": "string"
          },
          "numSegments": {
            "type": "string"
          },
          "smsMessageSid": {
            "type": "string"
          },
          "smsSid": {
            "type": "string"
          },
          "smsStatus": {
            "type": "string"
          },
          "to": {
            "type": "string"
          },
          "toCity": {
            "type": "string"
          },
          "toCountry": {
            "type": "string"
          },
          "toState": {
            "type": "string"
          },
          "toZip": {
            "type": "string"
          }
        }
      },
      "SendSmsCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "eventId": {
            "type": "string",
            "format": "guid"
          },
          "message": {
            "type": "string"
          },
          "registrationId": {
            "type": "string",
            "format": "guid"
          }
        }
      },
      "SmsDisplayItem": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "body": {
            "type": "string"
          },
          "date": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "sent": {
            "type": "boolean"
          },
          "status": {
            "type": "string"
          }
        }
      },
      "SmsConversationQuery": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "eventId": {
            "type": "string",
            "format": "guid"
          },
          "registrationId": {
            "type": "string",
            "format": "guid"
          }
        }
      },
      "IgnorePaymentCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "eventId": {
            "type": "string",
            "format": "guid"
          },
          "paymentId": {
            "type": "string",
            "format": "guid"
          }
        }
      },
      "PaymentOverview": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "balance": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/BalanceDto"
              }
            ]
          },
          "notFullyPaidRegistrations": {
            "type": "integer",
            "format": "int32"
          },
          "outstandingAmount": {
            "type": "number",
            "format": "decimal"
          },
          "paidRegistrations": {
            "type": "integer",
            "format": "int32"
          },
          "potentialOfOpenSpots": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OpenSpotsPotential"
            }
          },
          "receivedMoney": {
            "type": "number",
            "format": "decimal"
          }
        }
      },
      "BalanceDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "accountIban": {
            "type": "string"
          },
          "balance": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "currency": {
            "type": "string"
          },
          "date": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        }
      },
      "OpenSpotsPotential": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "name": {
            "type": "string"
          },
          "potentialIncome": {
            "type": "number",
            "format": "decimal"
          },
          "registrableId": {
            "type": "string",
            "format": "guid"
          },
          "spotsAvailable": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "PaymentOverviewQuery": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "eventId": {
            "type": "string",
            "format": "guid"
          }
        }
      },
      "PaymentDisplayItem": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "amount": {
            "type": "number",
            "format": "decimal"
          },
          "amountAssigned": {
            "type": "number",
            "format": "decimal"
          },
          "bookingDate": {
            "type": "string",
            "format": "date-time"
          },
          "currency": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "string",
            "format": "guid"
          },
          "info": {
            "type": "string",
            "nullable": true
          },
          "paymentSlipId": {
            "type": "string",
            "format": "guid",
            "nullable": true
          },
          "reference": {
            "type": "string",
            "nullable": true
          },
          "amountRepaid": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "settled": {
            "type": "boolean"
          },
          "ignore": {
            "type": "boolean"
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "debitorName": {
            "type": "string",
            "nullable": true
          },
          "creditorName": {
            "type": "string",
            "nullable": true
          },
          "creditorIban": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "UnassignedIncomingPaymentsQuery": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "eventId": {
            "type": "string",
            "format": "guid"
          },
          "paymentId": {
            "type": "string",
            "format": "guid"
          }
        }
      },
      "UnassignedPayoutsQuery": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "eventId": {
            "type": "string",
            "format": "guid"
          },
          "paymentId": {
            "type": "string",
            "format": "guid"
          }
        }
      },
      "CheckIfIncomingPaymentIsSettledCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "incomingPaymentId": {
            "type": "string",
            "format": "guid"
          }
        }
      },
      "CheckIfOutgoingPaymentIsSettledCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "outgoingPaymentId": {
            "type": "string",
            "format": "guid"
          }
        }
      },
      "BookingsOfDay": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "bookingDate": {
            "type": "string",
            "format": "date-time"
          },
          "bookings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PaymentDisplayItem2"
            }
          },
          "balanceAfter": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          }
        }
      },
      "PaymentDisplayItem2": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "format": "guid"
          },
          "typ": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/CreditDebit"
              }
            ]
          },
          "amount": {
            "type": "number",
            "format": "decimal"
          },
          "charges": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "amountAssigned": {
            "type": "number",
            "format": "decimal"
          },
          "bookingDate": {
            "type": "string",
            "format": "date-time"
          },
          "currency": {
            "type": "string",
            "nullable": true
          },
          "reference": {
            "type": "string",
            "nullable": true
          },
          "amountRepaid": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "settled": {
            "type": "boolean"
          },
          "ignore": {
            "type": "boolean"
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "debitorName": {
            "type": "string",
            "nullable": true
          },
          "creditorName": {
            "type": "string",
            "nullable": true
          },
          "creditorIban": {
            "type": "string",
            "nullable": true
          },
          "paymentSlipId": {
            "type": "string",
            "format": "guid",
            "nullable": true
          },
          "balance": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          }
        }
      },
      "CreditDebit": {
        "type": "integer",
        "description": "",
        "x-enumNames": [
          "CRDT",
          "DBIT"
        ],
        "enum": [
          1,
          2
        ]
      },
      "PaymentsByDayQuery": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "eventId": {
            "type": "string",
            "format": "guid"
          },
          "hideIgnored": {
            "type": "boolean"
          },
          "hideSettled": {
            "type": "boolean"
          },
          "hideIncoming": {
            "type": "boolean"
          },
          "hideOutgoing": {
            "type": "boolean"
          },
          "searchString": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "PaymentDisplayItem3": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "format": "guid"
          },
          "typ": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/CreditDebit"
              }
            ]
          },
          "bookingDate": {
            "type": "string",
            "format": "date-time"
          },
          "amount": {
            "type": "number",
            "format": "decimal"
          },
          "charges": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "currency": {
            "type": "string",
            "nullable": true
          },
          "debitorName": {
            "type": "string",
            "nullable": true
          },
          "creditorName": {
            "type": "string",
            "nullable": true
          },
          "creditorIban": {
            "type": "string",
            "nullable": true
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "reference": {
            "type": "string",
            "nullable": true
          },
          "paymentSlipId": {
            "type": "string",
            "format": "guid",
            "nullable": true
          },
          "amountAssigned": {
            "type": "number",
            "format": "decimal"
          },
          "amountRepaid": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "settled": {
            "type": "boolean"
          },
          "ignore": {
            "type": "boolean"
          }
        }
      },
      "BookingsByStateQuery": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "eventId": {
            "type": "string",
            "format": "guid"
          },
          "hideIgnored": {
            "type": "boolean"
          },
          "hideSettled": {
            "type": "boolean"
          },
          "hideIncoming": {
            "type": "boolean"
          },
          "hideOutgoing": {
            "type": "boolean"
          }
        }
      },
      "AssignOutgoingPaymentCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "eventId": {
            "type": "string",
            "format": "guid"
          },
          "outgoingPaymentId": {
            "type": "string",
            "format": "guid"
          },
          "payoutRequestId": {
            "type": "string",
            "format": "guid",
            "nullable": true
          },
          "registrationId": {
            "type": "string",
            "format": "guid",
            "nullable": true
          },
          "amount": {
            "type": "number",
            "format": "decimal"
          },
          "acceptDifference": {
            "type": "boolean"
          },
          "acceptDifferenceReason": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "CheckIfPayoutIsConfirmedCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "payoutRequestId": {
            "type": "string",
            "format": "guid"
          }
        }
      },
      "PayoutDisplayItem": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "registrationId": {
            "type": "string",
            "format": "guid"
          },
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "price": {
            "type": "number",
            "format": "decimal"
          },
          "paid": {
            "type": "number",
            "format": "decimal"
          },
          "reason": {
            "type": "string",
            "nullable": true
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "payments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PaymentDisplayItem4"
            }
          },
          "amount": {
            "type": "number",
            "format": "decimal"
          },
          "stateText": {
            "type": "string"
          },
          "state": {
            "$ref": "#/components/schemas/PayoutState"
          }
        }
      },
      "PaymentDisplayItem4": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "assigned": {
            "type": "number",
            "format": "decimal"
          },
          "paymentAmount": {
            "type": "number",
            "format": "decimal"
          },
          "paymentBookingDate": {
            "type": "string",
            "format": "date-time"
          },
          "paymentDebitorIban": {
            "type": "string",
            "nullable": true
          },
          "paymentDebitorName": {
            "type": "string",
            "nullable": true
          },
          "paymentMessage": {
            "type": "string",
            "nullable": true
          },
          "paymentInfo": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "PayoutState": {
        "type": "integer",
        "description": "",
        "x-enumNames": [
          "Requested",
          "Sent",
          "Confirmed"
        ],
        "enum": [
          1,
          2,
          3
        ]
      },
      "PayoutQuery": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "eventId": {
            "type": "string",
            "format": "guid"
          }
        }
      },
      "PossiblePayoutAssignment": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "amount": {
            "type": "number",
            "format": "decimal"
          },
          "amountAssigned": {
            "type": "number",
            "format": "decimal"
          },
          "amountMatch": {
            "type": "boolean"
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "currency": {
            "type": "string"
          },
          "participant": {
            "type": "string"
          },
          "info": {
            "type": "string",
            "nullable": true
          },
          "matchScore": {
            "type": "integer",
            "format": "int32"
          },
          "payoutRequestId": {
            "type": "string",
            "format": "guid"
          },
          "paymentId_OpenPosition": {
            "type": "string",
            "format": "guid"
          },
          "isOpen": {
            "type": "boolean"
          },
          "ibans": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "registrationId": {
            "type": "string",
            "format": "guid"
          }
        }
      },
      "PossiblePayoutAssignmentQuery": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "eventId": {
            "type": "string",
            "format": "guid"
          },
          "paymentId": {
            "type": "string",
            "format": "guid"
          }
        }
      },
      "RefundDisplayItem": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "registrationId": {
            "type": "string",
            "format": "guid"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "price": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "paid": {
            "type": "number",
            "format": "decimal"
          },
          "refundPercentage": {
            "type": "number",
            "format": "decimal"
          },
          "refund": {
            "type": "number",
            "format": "decimal"
          },
          "cancellationDate": {
            "type": "string",
            "format": "date-time"
          },
          "cancellationReason": {
            "type": "string"
          }
        }
      },
      "RefundsQuery": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "eventId": {
            "type": "string",
            "format": "guid"
          }
        }
      },
      "WillPayAtCheckinCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "eventId": {
            "type": "string",
            "format": "guid"
          },
          "registrationId": {
            "type": "string",
            "format": "guid"
          }
        }
      },
      "SavePaymentFileCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "eventId": {
            "type": "string",
            "format": "guid"
          },
          "contentType": {
            "type": "string"
          },
          "filename": {
            "type": "string"
          },
          "fileStream": {
            "$ref": "#/components/schemas/MemoryStream"
          }
        }
      },
      "MemoryStream": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Stream"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "canRead": {
                "type": "boolean"
              },
              "canSeek": {
                "type": "boolean"
              },
              "canWrite": {
                "type": "boolean"
              },
              "capacity": {
                "type": "integer",
                "format": "int32"
              },
              "length": {
                "type": "integer",
                "format": "int64"
              },
              "position": {
                "type": "integer",
                "format": "int64"
              }
            }
          }
        ]
      },
      "Stream": {
        "allOf": [
          {
            "$ref": "#/components/schemas/MarshalByRefObject"
          },
          {
            "type": "object",
            "x-abstract": true,
            "additionalProperties": false,
            "properties": {
              "canTimeout": {
                "type": "boolean"
              },
              "readTimeout": {
                "type": "integer",
                "format": "int32"
              },
              "writeTimeout": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        ]
      },
      "MarshalByRefObject": {
        "type": "object",
        "x-abstract": true,
        "additionalProperties": false
      },
      "PaymentSlipImageQuery": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "eventId": {
            "type": "string",
            "format": "guid"
          },
          "paymentSlipId": {
            "type": "string",
            "format": "guid"
          }
        }
      },
      "TryAssignPaymentSlipCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "eventId": {
            "type": "string",
            "format": "guid"
          },
          "paymentSlipId": {
            "type": "string",
            "format": "guid"
          },
          "reference": {
            "type": "string"
          }
        }
      },
      "FetchBankStamentsFileCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "eventId": {
            "type": "string",
            "format": "guid"
          }
        }
      },
      "ProcessFetchedBankStatementsFileCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "rawBankStatementFileId": {
            "type": "string",
            "format": "guid"
          },
          "eventId": {
            "type": "string",
            "format": "guid"
          }
        }
      },
      "DuePaymentItem": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "acceptedMail": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/SentMailDto"
              }
            ]
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "string",
            "format": "guid"
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "paid": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "phoneNormalized": {
            "type": "string",
            "nullable": true
          },
          "price": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "receivedAt": {
            "type": "string",
            "format": "date-time"
          },
          "reminder1Due": {
            "type": "boolean"
          },
          "reminder1Mail": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/SentMailDto"
              }
            ]
          },
          "reminder2Due": {
            "type": "boolean"
          },
          "reminder2Mail": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/SentMailDto"
              }
            ]
          },
          "reminderLevel": {
            "type": "integer",
            "format": "int32"
          },
          "reminderMailPossible": {
            "type": "boolean"
          },
          "reminderSmsPossible": {
            "type": "boolean"
          },
          "reminderSmsSent": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "daysSinceLastNotification": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "lastNotificationType": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "SentMailDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "format": "guid"
          },
          "sent": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "DuePaymentsQuery": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "eventId": {
            "type": "string",
            "format": "guid"
          }
        }
      },
      "SendReminderMailCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "eventId": {
            "type": "string",
            "format": "guid"
          },
          "registrationId": {
            "type": "string",
            "format": "guid"
          },
          "withhold": {
            "type": "boolean"
          }
        }
      },
      "DifferencesDisplayItem": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "registrationId": {
            "type": "string",
            "format": "guid"
          },
          "price": {
            "type": "number",
            "format": "decimal"
          },
          "amountPaid": {
            "type": "number",
            "format": "decimal"
          },
          "difference": {
            "type": "number",
            "format": "decimal"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "state": {
            "$ref": "#/components/schemas/RegistrationState"
          },
          "paymentDueMailSent": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "tooMuchPaidMailSent": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        }
      },
      "DifferencesQuery": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "eventId": {
            "type": "string",
            "format": "guid"
          }
        }
      },
      "RefundDifferenceCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "registrationId": {
            "type": "string",
            "format": "guid"
          },
          "eventId": {
            "type": "string",
            "format": "guid"
          },
          "reason": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "SendPaymentDueMailCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "registrationId": {
            "type": "string",
            "format": "guid"
          },
          "eventId": {
            "type": "string",
            "format": "guid"
          }
        }
      },
      "AssignedPaymentsOfRegistrationQuery": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "eventId": {
            "type": "string",
            "format": "guid"
          },
          "registrationId": {
            "type": "string",
            "format": "guid"
          }
        }
      },
      "AssignIncomingPaymentCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "acceptDifference": {
            "type": "boolean"
          },
          "acceptDifferenceReason": {
            "type": "string",
            "nullable": true
          },
          "amount": {
            "type": "number",
            "format": "decimal"
          },
          "eventId": {
            "type": "string",
            "format": "guid"
          },
          "paymentIncomingId": {
            "type": "string",
            "format": "guid"
          },
          "registrationId": {
            "type": "string",
            "format": "guid"
          }
        }
      },
      "AssignRepaymentCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "amount": {
            "type": "number",
            "format": "decimal"
          },
          "eventId": {
            "type": "string",
            "format": "guid"
          },
          "incomingPaymentId": {
            "type": "string",
            "format": "guid"
          },
          "outgoingPaymentId": {
            "type": "string",
            "format": "guid"
          }
        }
      },
      "PaymentAssignments": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "openAmount": {
            "type": "number",
            "format": "decimal"
          },
          "type": {
            "$ref": "#/components/schemas/PaymentType"
          },
          "registrationCandidates": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/AssignmentCandidateRegistration"
            }
          },
          "existingAssignments": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ExistingAssignment"
            }
          }
        }
      },
      "PaymentType": {
        "type": "integer",
        "description": "",
        "x-enumNames": [
          "Incoming",
          "Outgoing"
        ],
        "enum": [
          1,
          2
        ]
      },
      "AssignmentCandidateRegistration": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "registrationId": {
            "type": "string",
            "format": "guid"
          },
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "price": {
            "type": "number",
            "format": "decimal"
          },
          "isWaitingList": {
            "type": "boolean"
          },
          "amountMatch": {
            "type": "boolean"
          },
          "amountPaid": {
            "type": "number",
            "format": "decimal"
          },
          "matchScore": {
            "type": "integer",
            "format": "int32"
          },
          "paymentId": {
            "type": "string",
            "format": "guid"
          },
          "state": {
            "$ref": "#/components/schemas/RegistrationState"
          }
        }
      },
      "ExistingAssignment": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "registrationId": {
            "type": "string",
            "format": "guid"
          },
          "paymentAssignmentId_Existing": {
            "type": "string",
            "format": "guid",
            "nullable": true
          },
          "assignedAmount": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "price": {
            "type": "number",
            "format": "decimal"
          },
          "isWaitingList": {
            "type": "boolean"
          },
          "paymentId": {
            "type": "string",
            "format": "guid"
          }
        }
      },
      "PaymentAssignmentsQuery": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "eventId": {
            "type": "string",
            "format": "guid"
          },
          "paymentId": {
            "type": "string",
            "format": "guid"
          }
        }
      },
      "PossibleRepaymentAssignment": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "amount": {
            "type": "number",
            "format": "decimal"
          },
          "amountUnsettled": {
            "type": "number",
            "format": "decimal"
          },
          "bookingDate": {
            "type": "string",
            "format": "date-time"
          },
          "currency": {
            "type": "string",
            "nullable": true
          },
          "debitorName": {
            "type": "string",
            "nullable": true
          },
          "info": {
            "type": "string",
            "nullable": true
          },
          "matchScore": {
            "type": "integer",
            "format": "int32"
          },
          "paymentId_Counter": {
            "type": "string",
            "format": "guid"
          },
          "paymentId_OpenPosition": {
            "type": "string",
            "format": "guid"
          },
          "settled": {
            "type": "boolean"
          }
        }
      },
      "PossibleRepaymentAssignmentQuery": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "eventId": {
            "type": "string",
            "format": "guid"
          },
          "paymentId": {
            "type": "string",
            "format": "guid"
          }
        }
      },
      "UnassignPaymentCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "eventId": {
            "type": "string",
            "format": "guid"
          },
          "paymentAssignmentId": {
            "type": "string",
            "format": "guid"
          }
        }
      },
      "DeleteMailCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "eventId": {
            "type": "string",
            "format": "guid"
          },
          "mailId": {
            "type": "string",
            "format": "guid"
          }
        }
      },
      "MailDisplayItem": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "contentHtml": {
            "type": "string"
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "events": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MailEventDisplayItem"
            }
          },
          "id": {
            "type": "string",
            "format": "guid"
          },
          "recipients": {
            "type": "string"
          },
          "senderMail": {
            "type": "string"
          },
          "senderName": {
            "type": "string"
          },
          "state": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/MailState"
              }
            ]
          },
          "subject": {
            "type": "string"
          },
          "withhold": {
            "type": "boolean"
          }
        }
      },
      "MailEventDisplayItem": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "email": {
            "type": "string"
          },
          "state": {
            "$ref": "#/components/schemas/MailState"
          },
          "stateText": {
            "type": "string"
          },
          "when": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "MailState": {
        "type": "integer",
        "description": "",
        "x-enumNames": [
          "Unknown",
          "Processed",
          "Dropped",
          "Delivered",
          "Deferred",
          "Bounce",
          "Open",
          "Click",
          "SpamReport",
          "Unsubscribe",
          "GroupUnsubscribe",
          "GroupResubscribe"
        ],
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8,
          9,
          10,
          11
        ]
      },
      "MailsOfRegistrationQuery": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "eventId": {
            "type": "string",
            "format": "guid"
          },
          "registrationId": {
            "type": "string",
            "format": "guid"
          }
        }
      },
      "PendingMailListItem": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "format": "guid"
          },
          "recipients": {
            "type": "string",
            "nullable": true
          },
          "subject": {
            "type": "string",
            "nullable": true
          },
          "contentStart": {
            "type": "string",
            "nullable": true
          },
          "created": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "PendingMailsQuery": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "eventId": {
            "type": "string",
            "format": "guid"
          }
        }
      },
      "ReleaseAllPendingMailsCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "eventId": {
            "type": "string",
            "format": "guid"
          }
        }
      },
      "ReleaseMailCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "eventId": {
            "type": "string",
            "format": "guid"
          },
          "mailId": {
            "type": "string",
            "format": "guid"
          }
        }
      },
      "AutoMailPreview": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "subject": {
            "type": "string",
            "nullable": true
          },
          "contentHtml": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "AutoMailPreviewQuery": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "eventId": {
            "type": "string",
            "format": "guid"
          },
          "autoMailTemplateId": {
            "type": "string",
            "format": "guid"
          },
          "registrationId": {
            "type": "string",
            "format": "guid",
            "nullable": true
          }
        }
      },
      "AutoMailTemplateDisplayItem": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "format": "guid"
          },
          "type": {
            "$ref": "#/components/schemas/MailType"
          },
          "subject": {
            "type": "string",
            "nullable": true
          },
          "contentHtml": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "MailType": {
        "type": "integer",
        "description": "",
        "x-enumNames": [
          "SingleRegistrationAccepted",
          "SingleRegistrationOnWaitingList",
          "RegistrationReceived",
          "PartnerRegistrationFirstPartnerAccepted",
          "PartnerRegistrationMatchedAndAccepted",
          "PartnerRegistrationFirstPartnerOnWaitingList",
          "PartnerRegistrationMatchedOnWaitingList",
          "SoldOut",
          "MoneyOwed",
          "TooMuchPaid",
          "RegistrationCancelled",
          "SingleRegistrationFullyPaid",
          "PartnerRegistrationFirstPaid",
          "PartnerRegistrationFullyPaid",
          "SingleRegistrationFirstReminder",
          "SingleRegistrationSecondReminder",
          "PartnerRegistrationFirstReminder",
          "PartnerRegistrationSecondReminder",
          "OptionsForRegistrationsOnWaitingList"
        ],
        "enum": [
          1,
          2,
          3,
          11,
          12,
          13,
          14,
          21,
          22,
          23,
          31,
          41,
          42,
          43,
          51,
          52,
          61,
          62,
          101
        ]
      },
      "AutoMailTemplateQuery": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "eventId": {
            "type": "string",
            "format": "guid"
          },
          "mailTemplateId": {
            "type": "string",
            "format": "guid"
          }
        }
      },
      "AutoMailTemplates": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "eventId": {
            "type": "string",
            "format": "guid"
          },
          "senderMail": {
            "type": "string",
            "nullable": true
          },
          "senderAlias": {
            "type": "string",
            "nullable": true
          },
          "groups": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/AutoMailTemplateGroup"
            }
          },
          "availableLanguages": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "singleRegistrationPossible": {
            "type": "boolean"
          },
          "partnerRegistrationPossible": {
            "type": "boolean"
          }
        }
      },
      "AutoMailTemplateGroup": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "types": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/AutoMailTemplateMetadataType"
            }
          }
        }
      },
      "AutoMailTemplateMetadataType": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "type": {
            "$ref": "#/components/schemas/MailType"
          },
          "releaseImmediately": {
            "type": "boolean"
          },
          "templates": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/AutoMailTemplateMetadataLanguage"
            }
          },
          "typeText": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "AutoMailTemplateMetadataLanguage": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "format": "guid",
            "nullable": true
          },
          "language": {
            "type": "string",
            "nullable": true
          },
          "subject": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "AutoMailTemplatesQuery": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "eventId": {
            "type": "string",
            "format": "guid"
          }
        }
      },
      "CreateAutoMailTemplateCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "eventId": {
            "type": "string",
            "format": "guid"
          },
          "type": {
            "$ref": "#/components/schemas/MailType"
          },
          "language": {
            "type": "string"
          }
        }
      },
      "DeleteMailTemplateCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "eventId": {
            "type": "string",
            "format": "guid"
          },
          "mailTemplateId": {
            "type": "string",
            "format": "guid"
          }
        }
      },
      "UpdateAutoMailConfigurationCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "eventId": {
            "type": "string",
            "format": "guid"
          },
          "senderName": {
            "type": "string",
            "nullable": true
          },
          "senderMail": {
            "type": "string",
            "nullable": true
          },
          "singleRegistrationPossible": {
            "type": "boolean"
          },
          "partnerRegistrationPossible": {
            "type": "boolean"
          },
          "availableLanguages": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "string"
            }
          }
        }
      },
      "UpdateAutoMailTemplateCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "eventId": {
            "type": "string",
            "format": "guid"
          },
          "templateId": {
            "type": "string",
            "format": "guid"
          },
          "subject": {
            "type": "string",
            "nullable": true
          },
          "contentHtml": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "SendMailCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "contentHtml": {
            "type": "string"
          },
          "contentPlainText": {
            "type": "string"
          },
          "mailId": {
            "type": "string",
            "format": "guid"
          },
          "sender": {
            "$ref": "#/components/schemas/EmailAddress"
          },
          "subject": {
            "type": "string"
          },
          "to": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EmailAddress"
            }
          }
        }
      },
      "EmailAddress": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "email": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "MailTypeItem": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "bulkMailKey": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/MailType"
              }
            ]
          },
          "userText": {
            "type": "string"
          }
        }
      },
      "PossibleMailTypesQuery": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "eventId": {
            "type": "string",
            "format": "guid"
          },
          "registrationId": {
            "type": "string",
            "format": "guid"
          }
        }
      },
      "FixInvalidAddressCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "eventId": {
            "type": "string",
            "format": "guid"
          },
          "newEmailAddress": {
            "type": "string"
          },
          "oldEmailAddress": {
            "type": "string"
          },
          "registrationId": {
            "type": "string",
            "format": "guid"
          }
        }
      },
      "InvalidAddress": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "email": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "lastMailSent": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "lastMailState": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "proposals": {
            "type": "string"
          },
          "registrationId": {
            "type": "string",
            "format": "guid"
          },
          "registrationState": {
            "type": "string"
          }
        }
      },
      "InvalidAddressesQuery": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "eventId": {
            "type": "string",
            "format": "guid"
          }
        }
      },
      "NotReceivedMail": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "events": {
            "type": "string"
          },
          "id": {
            "type": "string",
            "format": "guid"
          },
          "recipients": {
            "type": "string"
          },
          "registrationId": {
            "type": "string",
            "format": "guid"
          },
          "sent": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "state": {
            "type": "string"
          },
          "subject": {
            "type": "string"
          }
        }
      },
      "NotReceivedMailsQuery": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "eventId": {
            "type": "string",
            "format": "guid"
          }
        }
      },
      "ImportMailsFromImapCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "eventId": {
            "type": "string",
            "format": "guid"
          }
        }
      },
      "ImportMailsFromImapForAllActiveEventsCommand": {
        "type": "object",
        "additionalProperties": false
      },
      "TryAssignImportedMailCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "importedMailId": {
            "type": "string",
            "format": "guid"
          }
        }
      },
      "ProcessMailEventsCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "rawMailEventsId": {
            "type": "string",
            "format": "guid"
          }
        }
      },
      "PlaceholderDescription": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "key": {
            "type": "string"
          },
          "placeholder": {
            "type": "string"
          },
          "description": {
            "type": "string"
          }
        }
      },
      "AutoMailPlaceholderQuery": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "mailType": {
            "$ref": "#/components/schemas/MailType"
          }
        }
      },
      "ComposeAndSendMailCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "allowDuplicate": {
            "type": "boolean"
          },
          "bulkMailKey": {
            "type": "string"
          },
          "eventId": {
            "type": "string",
            "format": "guid"
          },
          "mailType": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/MailType"
              }
            ]
          },
          "registrationId": {
            "type": "string",
            "format": "guid"
          },
          "withhold": {
            "type": "boolean"
          },
          "data": {}
        }
      },
      "CreateBulkMailsCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "bulkMailKey": {
            "type": "string"
          },
          "eventId": {
            "type": "string",
            "format": "guid"
          }
        }
      },
      "PossibleAudience": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "audience": {
            "$ref": "#/components/schemas/MailingAudience"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "MailingAudience": {
        "type": "integer",
        "description": "",
        "x-enumFlags": true,
        "x-enumNames": [
          "Paid",
          "Unpaid",
          "WaitingList",
          "PredecessorEvent",
          "PrePredecessorEvent"
        ],
        "enum": [
          1,
          2,
          4,
          8,
          16
        ]
      },
      "PossibleAudiencesQuery": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "eventId": {
            "type": "string",
            "format": "guid"
          }
        }
      },
      "ReleaseBulkMailsCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "bulkMailKey": {
            "type": "string"
          },
          "eventId": {
            "type": "string",
            "format": "guid"
          }
        }
      },
      "TranslationQuery": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "language": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "DomainEventCatalogItem": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "typeName": {
            "type": "string",
            "nullable": true
          },
          "userText": {
            "type": "string"
          }
        }
      },
      "DomainEventCatalogQuery": {
        "type": "object",
        "additionalProperties": false
      },
      "DomainEventDisplayItem": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "id": {
            "type": "string",
            "format": "guid"
          },
          "type": {
            "type": "string"
          },
          "content": {
            "type": "string"
          }
        }
      },
      "DomainEventsQuery": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "eventId": {
            "type": "string",
            "format": "guid"
          },
          "types": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "SaveDomainEventCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "domainEventId": {
            "type": "string",
            "format": "guid"
          },
          "domainEventId_Parent": {
            "type": "string",
            "format": "guid",
            "nullable": true
          },
          "eventData": {
            "type": "string"
          },
          "eventId": {
            "type": "string",
            "format": "guid",
            "nullable": true
          },
          "eventType": {
            "type": "string"
          }
        }
      },
      "StartUpdateReadModelsOfEventCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "eventId": {
            "type": "string",
            "format": "guid"
          },
          "queryNames": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "string"
            }
          }
        }
      },
      "UpdateReadModelCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "queryName": {
            "type": "string"
          },
          "eventId": {
            "type": "string",
            "format": "guid"
          },
          "rowId": {
            "type": "string",
            "format": "guid",
            "nullable": true
          },
          "dirtyMoment": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "HostingOffers": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "dynamicColumns": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "offers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HostingOffer"
            }
          }
        }
      },
      "HostingOffer": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "admittedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "columns": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "email": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "language": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "registrationId": {
            "type": "string",
            "format": "guid"
          },
          "state": {
            "type": "string"
          }
        }
      },
      "HostingOffersQuery": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "eventId": {
            "type": "string",
            "format": "guid"
          }
        }
      },
      "HostingRequests": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "dynamicColumns": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "requests": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HostingRequest"
            }
          }
        }
      },
      "HostingRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "admittedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "columns": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "email": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "language": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "registrationId": {
            "type": "string",
            "format": "guid"
          },
          "state": {
            "type": "string"
          }
        }
      },
      "HostingRequestsQuery": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "eventId": {
            "type": "string",
            "format": "guid"
          }
        }
      },
      "CreateEventCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "acronym": {
            "type": "string"
          },
          "eventId_CopyFrom": {
            "type": "string",
            "format": "guid",
            "nullable": true
          },
          "id": {
            "type": "string",
            "format": "guid"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "EventDetails": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "format": "guid"
          },
          "name": {
            "type": "string"
          },
          "acronym": {
            "type": "string"
          },
          "state": {
            "$ref": "#/components/schemas/State"
          }
        }
      },
      "EventQuery": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "eventId": {
            "type": "string",
            "format": "guid"
          }
        }
      },
      "OpenRegistrationCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "deleteTestData": {
            "type": "boolean"
          },
          "eventId": {
            "type": "string",
            "format": "guid"
          }
        }
      },
      "EventSearchResult": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "acronym": {
            "type": "string"
          },
          "id": {
            "type": "string",
            "format": "guid"
          },
          "name": {
            "type": "string"
          },
          "requestSent": {
            "type": "boolean"
          },
          "state": {
            "$ref": "#/components/schemas/State"
          }
        }
      },
      "SearchEventQuery": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "includeAuthorizedEvents": {
            "type": "boolean"
          },
          "includeRequestedEvents": {
            "type": "boolean"
          },
          "searchString": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "AddUserToRoleInEventCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "eventId": {
            "type": "string",
            "format": "guid"
          },
          "role": {
            "$ref": "#/components/schemas/UserInEventRole"
          },
          "userId": {
            "type": "string",
            "format": "guid"
          }
        }
      },
      "UserInEventRole": {
        "type": "integer",
        "description": "",
        "x-enumNames": [
          "None",
          "Reader",
          "Writer",
          "Admin"
        ],
        "enum": [
          0,
          1,
          2,
          3
        ]
      },
      "UserInEventDisplayItem": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "eventAcronym": {
            "type": "string"
          },
          "eventId": {
            "type": "string",
            "format": "guid"
          },
          "eventName": {
            "type": "string"
          },
          "eventState": {
            "$ref": "#/components/schemas/State"
          },
          "requestSent": {
            "type": "boolean"
          },
          "role": {
            "$ref": "#/components/schemas/UserInEventRole"
          },
          "userEmail": {
            "type": "string"
          },
          "userFirstName": {
            "type": "string"
          },
          "userId": {
            "type": "string",
            "format": "guid"
          },
          "userLastName": {
            "type": "string"
          }
        }
      },
      "EventsOfUserQuery": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "includeRequestedEvents": {
            "type": "boolean"
          }
        }
      },
      "RemoveUserFromRoleInEventCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "eventId": {
            "type": "string",
            "format": "guid"
          },
          "role": {
            "$ref": "#/components/schemas/UserInEventRole"
          },
          "userId": {
            "type": "string",
            "format": "guid"
          }
        }
      },
      "UsersOfEventQuery": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "eventId": {
            "type": "string",
            "format": "guid"
          }
        }
      },
      "AccessRequestOfEvent": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "email": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "id": {
            "type": "string",
            "format": "guid"
          },
          "lastName": {
            "type": "string"
          },
          "requestReceived": {
            "type": "string",
            "format": "date-time"
          },
          "requestText": {
            "type": "string"
          }
        }
      },
      "AccessRequestsOfEventQuery": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "eventId": {
            "type": "string",
            "format": "guid"
          },
          "includeDeniedRequests": {
            "type": "boolean"
          }
        }
      },
      "RequestAccessCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "eventId": {
            "type": "string",
            "format": "guid"
          },
          "requestText": {
            "type": "string"
          }
        }
      },
      "RespondToRequestCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "accessToEventRequestId": {
            "type": "string",
            "format": "guid"
          },
          "eventId": {
            "type": "string",
            "format": "guid"
          },
          "response": {
            "$ref": "#/components/schemas/RequestResponse"
          },
          "responseText": {
            "type": "string"
          },
          "role": {
            "$ref": "#/components/schemas/UserInEventRole"
          }
        }
      },
      "RequestResponse": {
        "type": "integer",
        "description": "",
        "x-enumNames": [
          "Granted",
          "Denied"
        ],
        "enum": [
          1,
          2
        ]
      },
      "RightsOfUserInEventQuery": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "eventId": {
            "type": "string",
            "format": "guid"
          }
        }
      }
    }
  }
}